<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yongche.yopsaas.db.dao.YopsaasRideOrderMapper">
  <resultMap id="BaseResultMap" type="com.yongche.yopsaas.db.domain.YopsaasRideOrder">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="ride_order_id" jdbcType="BIGINT" property="rideOrderId" />
    <result column="yc_order_id" jdbcType="BIGINT" property="ycOrderId" />
    <result column="product_type_id" jdbcType="INTEGER" property="productTypeId" />
    <result column="fixed_product_id" jdbcType="INTEGER" property="fixedProductId" />
    <result column="is_asap" jdbcType="TINYINT" property="isAsap" />
    <result column="source" jdbcType="INTEGER" property="source" />
    <result column="platform" jdbcType="TINYINT" property="platform" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="rc_status" jdbcType="TINYINT" property="rcStatus" />
    <result column="end_status" jdbcType="TINYINT" property="endStatus" />
    <result column="abnormal_mark" jdbcType="TINYINT" property="abnormalMark" />
    <result column="flag" jdbcType="BIGINT" property="flag" />
    <result column="account_id" jdbcType="BIGINT" property="accountId" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="user_phone" jdbcType="VARCHAR" property="userPhone" />
    <result column="passenger_name" jdbcType="VARCHAR" property="passengerName" />
    <result column="passenger_phone" jdbcType="VARCHAR" property="passengerPhone" />
    <result column="corporate_id" jdbcType="BIGINT" property="corporateId" />
    <result column="corporate_dept_id" jdbcType="INTEGER" property="corporateDeptId" />
    <result column="city" jdbcType="VARCHAR" property="city" />
    <result column="reason_id" jdbcType="INTEGER" property="reasonId" />
    <result column="flight_number" jdbcType="VARCHAR" property="flightNumber" />
    <result column="create_time" jdbcType="INTEGER" property="createTime" />
    <result column="update_time" jdbcType="INTEGER" property="updateTime" />
    <result column="init_time" jdbcType="INTEGER" property="initTime" />
    <result column="select_car_time" jdbcType="INTEGER" property="selectCarTime" />
    <result column="arrival_time" jdbcType="INTEGER" property="arrivalTime" />
    <result column="cancel_time" jdbcType="INTEGER" property="cancelTime" />
    <result column="car_id" jdbcType="INTEGER" property="carId" />
    <result column="car_type_id" jdbcType="INTEGER" property="carTypeId" />
    <result column="car_type_ids" jdbcType="VARCHAR" property="carTypeIds" />
    <result column="car_type" jdbcType="VARCHAR" property="carType" />
    <result column="car_brand" jdbcType="VARCHAR" property="carBrand" />
    <result column="driver_id" jdbcType="INTEGER" property="driverId" />
    <result column="driver_phone" jdbcType="VARCHAR" property="driverPhone" />
    <result column="driver_name" jdbcType="VARCHAR" property="driverName" />
    <result column="vehicle_number" jdbcType="VARCHAR" property="vehicleNumber" />
    <result column="expect_start_time" jdbcType="INTEGER" property="expectStartTime" />
    <result column="expect_end_time" jdbcType="INTEGER" property="expectEndTime" />
    <result column="time_length" jdbcType="INTEGER" property="timeLength" />
    <result column="start_time" jdbcType="INTEGER" property="startTime" />
    <result column="end_time" jdbcType="INTEGER" property="endTime" />
    <result column="confirm_time" jdbcType="INTEGER" property="confirmTime" />
    <result column="start_position" jdbcType="VARCHAR" property="startPosition" />
    <result column="start_address" jdbcType="VARCHAR" property="startAddress" />
    <result column="end_position" jdbcType="VARCHAR" property="endPosition" />
    <result column="end_address" jdbcType="VARCHAR" property="endAddress" />
    <result column="expect_start_latitude" jdbcType="DOUBLE" property="expectStartLatitude" />
    <result column="expect_start_longitude" jdbcType="DOUBLE" property="expectStartLongitude" />
    <result column="expect_end_latitude" jdbcType="DOUBLE" property="expectEndLatitude" />
    <result column="expect_end_longitude" jdbcType="DOUBLE" property="expectEndLongitude" />
    <result column="start_latitude" jdbcType="DOUBLE" property="startLatitude" />
    <result column="start_longitude" jdbcType="DOUBLE" property="startLongitude" />
    <result column="end_latitude" jdbcType="DOUBLE" property="endLatitude" />
    <result column="end_longitude" jdbcType="DOUBLE" property="endLongitude" />
    <result column="payment" jdbcType="INTEGER" property="payment" />
    <result column="pay_status" jdbcType="TINYINT" property="payStatus" />
    <result column="pay_time" jdbcType="INTEGER" property="payTime" />
    <result column="first_recharge_transaction_id" jdbcType="BIGINT" property="firstRechargeTransactionId" />
    <result column="first_recharge_amount" jdbcType="DECIMAL" property="firstRechargeAmount" />
    <result column="coupon_member_id" jdbcType="BIGINT" property="couponMemberId" />
    <result column="coupon_name" jdbcType="VARCHAR" property="couponName" />
    <result column="coupon_type" jdbcType="TINYINT" property="couponType" />
    <result column="coupon_facevalue" jdbcType="DECIMAL" property="couponFacevalue" />
    <result column="discount" jdbcType="DECIMAL" property="discount" />
    <result column="version" jdbcType="INTEGER" property="version" />
    <result column="fee_version" jdbcType="INTEGER" property="feeVersion" />
    <result column="refund_status" jdbcType="TINYINT" property="refundStatus" />
    <result column="pay_method" jdbcType="TINYINT" property="payMethod" />
    <result column="balance_status" jdbcType="TINYINT" property="balanceStatus" />
    <result column="payable" jdbcType="TINYINT" property="payable" />
    <result column="total_amount" jdbcType="DECIMAL" property="totalAmount" />
    <result column="deposit" jdbcType="DECIMAL" property="deposit" />
    <result column="loan_in_credit" jdbcType="DECIMAL" property="loanInCredit" />
    <result column="pay_amount" jdbcType="DECIMAL" property="payAmount" />
    <result column="min_amount" jdbcType="DECIMAL" property="minAmount" />
    <result column="origin_amount" jdbcType="DECIMAL" property="originAmount" />
    <result column="origin_sharing_amount" jdbcType="DECIMAL" property="originSharingAmount" />
    <result column="sharing_amount" jdbcType="DECIMAL" property="sharingAmount" />
    <result column="wx_order_sn" jdbcType="VARCHAR" property="wxOrderSn" />
    <result column="pay_id" jdbcType="VARCHAR" property="payId" />
    <result column="refund_amount" jdbcType="DECIMAL" property="refundAmount" />
    <result column="refund_type" jdbcType="VARCHAR" property="refundType" />
    <result column="refund_content" jdbcType="VARCHAR" property="refundContent" />
    <result column="refund_time" jdbcType="INTEGER" property="refundTime" />
    <result column="actual_time_length" jdbcType="INTEGER" property="actualTimeLength" />
    <result column="dependable_distance" jdbcType="INTEGER" property="dependableDistance" />
    <result column="mileage" jdbcType="INTEGER" property="mileage" />
    <result column="system_distance" jdbcType="INTEGER" property="systemDistance" />
    <result column="alitongxin_secret_no_x" jdbcType="VARCHAR" property="alitongxinSecretNoX" />
    <result column="alitongxin_subs_id" jdbcType="BIGINT" property="alitongxinSubsId" />
    <result column="alitongxin_status" jdbcType="TINYINT" property="alitongxinStatus" />
    <result column="passenger_session_id" jdbcType="VARCHAR" property="passengerSessionId" />
    <result column="last_operator" jdbcType="VARCHAR" property="lastOperator" />
    <result column="car_color" jdbcType="VARCHAR" property="carColor" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    ride_order_id, yc_order_id, product_type_id, fixed_product_id, is_asap, `source`, 
    platform, `status`, rc_status, end_status, abnormal_mark, flag, account_id, user_id, 
    user_phone, passenger_name, passenger_phone, corporate_id, corporate_dept_id, city, 
    reason_id, flight_number, create_time, update_time, init_time, select_car_time, arrival_time, 
    cancel_time, car_id, car_type_id, car_type_ids, car_type, car_brand, driver_id, driver_phone, 
    driver_name, vehicle_number, expect_start_time, expect_end_time, time_length, start_time, 
    end_time, confirm_time, start_position, start_address, end_position, end_address, 
    expect_start_latitude, expect_start_longitude, expect_end_latitude, expect_end_longitude, 
    start_latitude, start_longitude, end_latitude, end_longitude, payment, pay_status, 
    pay_time, first_recharge_transaction_id, first_recharge_amount, coupon_member_id, 
    coupon_name, coupon_type, coupon_facevalue, discount, version, fee_version, refund_status, 
    pay_method, balance_status, payable, total_amount, deposit, loan_in_credit, pay_amount, 
    min_amount, origin_amount, origin_sharing_amount, sharing_amount, wx_order_sn, pay_id, 
    refund_amount, refund_type, refund_content, refund_time, actual_time_length, dependable_distance, 
    mileage, system_distance, alitongxin_secret_no_x, alitongxin_subs_id, alitongxin_status, 
    passenger_session_id, last_operator, car_color
  </sql>
  <select id="selectByExample" parameterType="com.yongche.yopsaas.db.domain.YopsaasRideOrderExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from yopsaas_ride_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="example.distinct">
      distinct
    </if>
    <choose>
      <when test="selective != null and selective.length &gt; 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from yopsaas_ride_order
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from yopsaas_ride_order
    where ride_order_id = #{rideOrderId,jdbcType=BIGINT}
  </select>
  <select id="selectByPrimaryKeySelective" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <choose>
      <when test="selective != null and selective.length &gt; 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from yopsaas_ride_order
    where ride_order_id = #{rideOrderId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from yopsaas_ride_order
    where ride_order_id = #{rideOrderId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.yongche.yopsaas.db.domain.YopsaasRideOrderExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from yopsaas_ride_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yongche.yopsaas.db.domain.YopsaasRideOrder">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="rideOrderId" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into yopsaas_ride_order (yc_order_id, product_type_id, fixed_product_id, 
      is_asap, `source`, platform, 
      `status`, rc_status, end_status, 
      abnormal_mark, flag, account_id, 
      user_id, user_phone, passenger_name, 
      passenger_phone, corporate_id, corporate_dept_id, 
      city, reason_id, flight_number, 
      create_time, update_time, init_time, 
      select_car_time, arrival_time, cancel_time, 
      car_id, car_type_id, car_type_ids, 
      car_type, car_brand, driver_id, 
      driver_phone, driver_name, vehicle_number, 
      expect_start_time, expect_end_time, time_length, 
      start_time, end_time, confirm_time, 
      start_position, start_address, end_position, 
      end_address, expect_start_latitude, expect_start_longitude, 
      expect_end_latitude, expect_end_longitude, start_latitude, 
      start_longitude, end_latitude, end_longitude, 
      payment, pay_status, pay_time, 
      first_recharge_transaction_id, first_recharge_amount, 
      coupon_member_id, coupon_name, coupon_type, 
      coupon_facevalue, discount, version, 
      fee_version, refund_status, pay_method, 
      balance_status, payable, total_amount, 
      deposit, loan_in_credit, pay_amount, 
      min_amount, origin_amount, origin_sharing_amount, 
      sharing_amount, wx_order_sn, pay_id, 
      refund_amount, refund_type, refund_content, 
      refund_time, actual_time_length, dependable_distance, 
      mileage, system_distance, alitongxin_secret_no_x, 
      alitongxin_subs_id, alitongxin_status, passenger_session_id, 
      last_operator, car_color)
    values (#{ycOrderId,jdbcType=BIGINT}, #{productTypeId,jdbcType=INTEGER}, #{fixedProductId,jdbcType=INTEGER}, 
      #{isAsap,jdbcType=TINYINT}, #{source,jdbcType=INTEGER}, #{platform,jdbcType=TINYINT}, 
      #{status,jdbcType=TINYINT}, #{rcStatus,jdbcType=TINYINT}, #{endStatus,jdbcType=TINYINT}, 
      #{abnormalMark,jdbcType=TINYINT}, #{flag,jdbcType=BIGINT}, #{accountId,jdbcType=BIGINT}, 
      #{userId,jdbcType=BIGINT}, #{userPhone,jdbcType=VARCHAR}, #{passengerName,jdbcType=VARCHAR}, 
      #{passengerPhone,jdbcType=VARCHAR}, #{corporateId,jdbcType=BIGINT}, #{corporateDeptId,jdbcType=INTEGER}, 
      #{city,jdbcType=VARCHAR}, #{reasonId,jdbcType=INTEGER}, #{flightNumber,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=INTEGER}, #{updateTime,jdbcType=INTEGER}, #{initTime,jdbcType=INTEGER}, 
      #{selectCarTime,jdbcType=INTEGER}, #{arrivalTime,jdbcType=INTEGER}, #{cancelTime,jdbcType=INTEGER}, 
      #{carId,jdbcType=INTEGER}, #{carTypeId,jdbcType=INTEGER}, #{carTypeIds,jdbcType=VARCHAR}, 
      #{carType,jdbcType=VARCHAR}, #{carBrand,jdbcType=VARCHAR}, #{driverId,jdbcType=INTEGER}, 
      #{driverPhone,jdbcType=VARCHAR}, #{driverName,jdbcType=VARCHAR}, #{vehicleNumber,jdbcType=VARCHAR}, 
      #{expectStartTime,jdbcType=INTEGER}, #{expectEndTime,jdbcType=INTEGER}, #{timeLength,jdbcType=INTEGER}, 
      #{startTime,jdbcType=INTEGER}, #{endTime,jdbcType=INTEGER}, #{confirmTime,jdbcType=INTEGER}, 
      #{startPosition,jdbcType=VARCHAR}, #{startAddress,jdbcType=VARCHAR}, #{endPosition,jdbcType=VARCHAR}, 
      #{endAddress,jdbcType=VARCHAR}, #{expectStartLatitude,jdbcType=DOUBLE}, #{expectStartLongitude,jdbcType=DOUBLE}, 
      #{expectEndLatitude,jdbcType=DOUBLE}, #{expectEndLongitude,jdbcType=DOUBLE}, #{startLatitude,jdbcType=DOUBLE}, 
      #{startLongitude,jdbcType=DOUBLE}, #{endLatitude,jdbcType=DOUBLE}, #{endLongitude,jdbcType=DOUBLE}, 
      #{payment,jdbcType=INTEGER}, #{payStatus,jdbcType=TINYINT}, #{payTime,jdbcType=INTEGER}, 
      #{firstRechargeTransactionId,jdbcType=BIGINT}, #{firstRechargeAmount,jdbcType=DECIMAL}, 
      #{couponMemberId,jdbcType=BIGINT}, #{couponName,jdbcType=VARCHAR}, #{couponType,jdbcType=TINYINT}, 
      #{couponFacevalue,jdbcType=DECIMAL}, #{discount,jdbcType=DECIMAL}, #{version,jdbcType=INTEGER}, 
      #{feeVersion,jdbcType=INTEGER}, #{refundStatus,jdbcType=TINYINT}, #{payMethod,jdbcType=TINYINT}, 
      #{balanceStatus,jdbcType=TINYINT}, #{payable,jdbcType=TINYINT}, #{totalAmount,jdbcType=DECIMAL}, 
      #{deposit,jdbcType=DECIMAL}, #{loanInCredit,jdbcType=DECIMAL}, #{payAmount,jdbcType=DECIMAL}, 
      #{minAmount,jdbcType=DECIMAL}, #{originAmount,jdbcType=DECIMAL}, #{originSharingAmount,jdbcType=DECIMAL}, 
      #{sharingAmount,jdbcType=DECIMAL}, #{wxOrderSn,jdbcType=VARCHAR}, #{payId,jdbcType=VARCHAR}, 
      #{refundAmount,jdbcType=DECIMAL}, #{refundType,jdbcType=VARCHAR}, #{refundContent,jdbcType=VARCHAR}, 
      #{refundTime,jdbcType=INTEGER}, #{actualTimeLength,jdbcType=INTEGER}, #{dependableDistance,jdbcType=INTEGER}, 
      #{mileage,jdbcType=INTEGER}, #{systemDistance,jdbcType=INTEGER}, #{alitongxinSecretNoX,jdbcType=VARCHAR}, 
      #{alitongxinSubsId,jdbcType=BIGINT}, #{alitongxinStatus,jdbcType=TINYINT}, #{passengerSessionId,jdbcType=VARCHAR}, 
      #{lastOperator,jdbcType=VARCHAR}, #{carColor,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.yongche.yopsaas.db.domain.YopsaasRideOrder">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="rideOrderId" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into yopsaas_ride_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="ycOrderId != null">
        yc_order_id,
      </if>
      <if test="productTypeId != null">
        product_type_id,
      </if>
      <if test="fixedProductId != null">
        fixed_product_id,
      </if>
      <if test="isAsap != null">
        is_asap,
      </if>
      <if test="source != null">
        `source`,
      </if>
      <if test="platform != null">
        platform,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="rcStatus != null">
        rc_status,
      </if>
      <if test="endStatus != null">
        end_status,
      </if>
      <if test="abnormalMark != null">
        abnormal_mark,
      </if>
      <if test="flag != null">
        flag,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="userPhone != null">
        user_phone,
      </if>
      <if test="passengerName != null">
        passenger_name,
      </if>
      <if test="passengerPhone != null">
        passenger_phone,
      </if>
      <if test="corporateId != null">
        corporate_id,
      </if>
      <if test="corporateDeptId != null">
        corporate_dept_id,
      </if>
      <if test="city != null">
        city,
      </if>
      <if test="reasonId != null">
        reason_id,
      </if>
      <if test="flightNumber != null">
        flight_number,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="initTime != null">
        init_time,
      </if>
      <if test="selectCarTime != null">
        select_car_time,
      </if>
      <if test="arrivalTime != null">
        arrival_time,
      </if>
      <if test="cancelTime != null">
        cancel_time,
      </if>
      <if test="carId != null">
        car_id,
      </if>
      <if test="carTypeId != null">
        car_type_id,
      </if>
      <if test="carTypeIds != null">
        car_type_ids,
      </if>
      <if test="carType != null">
        car_type,
      </if>
      <if test="carBrand != null">
        car_brand,
      </if>
      <if test="driverId != null">
        driver_id,
      </if>
      <if test="driverPhone != null">
        driver_phone,
      </if>
      <if test="driverName != null">
        driver_name,
      </if>
      <if test="vehicleNumber != null">
        vehicle_number,
      </if>
      <if test="expectStartTime != null">
        expect_start_time,
      </if>
      <if test="expectEndTime != null">
        expect_end_time,
      </if>
      <if test="timeLength != null">
        time_length,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="confirmTime != null">
        confirm_time,
      </if>
      <if test="startPosition != null">
        start_position,
      </if>
      <if test="startAddress != null">
        start_address,
      </if>
      <if test="endPosition != null">
        end_position,
      </if>
      <if test="endAddress != null">
        end_address,
      </if>
      <if test="expectStartLatitude != null">
        expect_start_latitude,
      </if>
      <if test="expectStartLongitude != null">
        expect_start_longitude,
      </if>
      <if test="expectEndLatitude != null">
        expect_end_latitude,
      </if>
      <if test="expectEndLongitude != null">
        expect_end_longitude,
      </if>
      <if test="startLatitude != null">
        start_latitude,
      </if>
      <if test="startLongitude != null">
        start_longitude,
      </if>
      <if test="endLatitude != null">
        end_latitude,
      </if>
      <if test="endLongitude != null">
        end_longitude,
      </if>
      <if test="payment != null">
        payment,
      </if>
      <if test="payStatus != null">
        pay_status,
      </if>
      <if test="payTime != null">
        pay_time,
      </if>
      <if test="firstRechargeTransactionId != null">
        first_recharge_transaction_id,
      </if>
      <if test="firstRechargeAmount != null">
        first_recharge_amount,
      </if>
      <if test="couponMemberId != null">
        coupon_member_id,
      </if>
      <if test="couponName != null">
        coupon_name,
      </if>
      <if test="couponType != null">
        coupon_type,
      </if>
      <if test="couponFacevalue != null">
        coupon_facevalue,
      </if>
      <if test="discount != null">
        discount,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="feeVersion != null">
        fee_version,
      </if>
      <if test="refundStatus != null">
        refund_status,
      </if>
      <if test="payMethod != null">
        pay_method,
      </if>
      <if test="balanceStatus != null">
        balance_status,
      </if>
      <if test="payable != null">
        payable,
      </if>
      <if test="totalAmount != null">
        total_amount,
      </if>
      <if test="deposit != null">
        deposit,
      </if>
      <if test="loanInCredit != null">
        loan_in_credit,
      </if>
      <if test="payAmount != null">
        pay_amount,
      </if>
      <if test="minAmount != null">
        min_amount,
      </if>
      <if test="originAmount != null">
        origin_amount,
      </if>
      <if test="originSharingAmount != null">
        origin_sharing_amount,
      </if>
      <if test="sharingAmount != null">
        sharing_amount,
      </if>
      <if test="wxOrderSn != null">
        wx_order_sn,
      </if>
      <if test="payId != null">
        pay_id,
      </if>
      <if test="refundAmount != null">
        refund_amount,
      </if>
      <if test="refundType != null">
        refund_type,
      </if>
      <if test="refundContent != null">
        refund_content,
      </if>
      <if test="refundTime != null">
        refund_time,
      </if>
      <if test="actualTimeLength != null">
        actual_time_length,
      </if>
      <if test="dependableDistance != null">
        dependable_distance,
      </if>
      <if test="mileage != null">
        mileage,
      </if>
      <if test="systemDistance != null">
        system_distance,
      </if>
      <if test="alitongxinSecretNoX != null">
        alitongxin_secret_no_x,
      </if>
      <if test="alitongxinSubsId != null">
        alitongxin_subs_id,
      </if>
      <if test="alitongxinStatus != null">
        alitongxin_status,
      </if>
      <if test="passengerSessionId != null">
        passenger_session_id,
      </if>
      <if test="lastOperator != null">
        last_operator,
      </if>
      <if test="carColor != null">
        car_color,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="ycOrderId != null">
        #{ycOrderId,jdbcType=BIGINT},
      </if>
      <if test="productTypeId != null">
        #{productTypeId,jdbcType=INTEGER},
      </if>
      <if test="fixedProductId != null">
        #{fixedProductId,jdbcType=INTEGER},
      </if>
      <if test="isAsap != null">
        #{isAsap,jdbcType=TINYINT},
      </if>
      <if test="source != null">
        #{source,jdbcType=INTEGER},
      </if>
      <if test="platform != null">
        #{platform,jdbcType=TINYINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="rcStatus != null">
        #{rcStatus,jdbcType=TINYINT},
      </if>
      <if test="endStatus != null">
        #{endStatus,jdbcType=TINYINT},
      </if>
      <if test="abnormalMark != null">
        #{abnormalMark,jdbcType=TINYINT},
      </if>
      <if test="flag != null">
        #{flag,jdbcType=BIGINT},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="userPhone != null">
        #{userPhone,jdbcType=VARCHAR},
      </if>
      <if test="passengerName != null">
        #{passengerName,jdbcType=VARCHAR},
      </if>
      <if test="passengerPhone != null">
        #{passengerPhone,jdbcType=VARCHAR},
      </if>
      <if test="corporateId != null">
        #{corporateId,jdbcType=BIGINT},
      </if>
      <if test="corporateDeptId != null">
        #{corporateDeptId,jdbcType=INTEGER},
      </if>
      <if test="city != null">
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="reasonId != null">
        #{reasonId,jdbcType=INTEGER},
      </if>
      <if test="flightNumber != null">
        #{flightNumber,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=INTEGER},
      </if>
      <if test="initTime != null">
        #{initTime,jdbcType=INTEGER},
      </if>
      <if test="selectCarTime != null">
        #{selectCarTime,jdbcType=INTEGER},
      </if>
      <if test="arrivalTime != null">
        #{arrivalTime,jdbcType=INTEGER},
      </if>
      <if test="cancelTime != null">
        #{cancelTime,jdbcType=INTEGER},
      </if>
      <if test="carId != null">
        #{carId,jdbcType=INTEGER},
      </if>
      <if test="carTypeId != null">
        #{carTypeId,jdbcType=INTEGER},
      </if>
      <if test="carTypeIds != null">
        #{carTypeIds,jdbcType=VARCHAR},
      </if>
      <if test="carType != null">
        #{carType,jdbcType=VARCHAR},
      </if>
      <if test="carBrand != null">
        #{carBrand,jdbcType=VARCHAR},
      </if>
      <if test="driverId != null">
        #{driverId,jdbcType=INTEGER},
      </if>
      <if test="driverPhone != null">
        #{driverPhone,jdbcType=VARCHAR},
      </if>
      <if test="driverName != null">
        #{driverName,jdbcType=VARCHAR},
      </if>
      <if test="vehicleNumber != null">
        #{vehicleNumber,jdbcType=VARCHAR},
      </if>
      <if test="expectStartTime != null">
        #{expectStartTime,jdbcType=INTEGER},
      </if>
      <if test="expectEndTime != null">
        #{expectEndTime,jdbcType=INTEGER},
      </if>
      <if test="timeLength != null">
        #{timeLength,jdbcType=INTEGER},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=INTEGER},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=INTEGER},
      </if>
      <if test="confirmTime != null">
        #{confirmTime,jdbcType=INTEGER},
      </if>
      <if test="startPosition != null">
        #{startPosition,jdbcType=VARCHAR},
      </if>
      <if test="startAddress != null">
        #{startAddress,jdbcType=VARCHAR},
      </if>
      <if test="endPosition != null">
        #{endPosition,jdbcType=VARCHAR},
      </if>
      <if test="endAddress != null">
        #{endAddress,jdbcType=VARCHAR},
      </if>
      <if test="expectStartLatitude != null">
        #{expectStartLatitude,jdbcType=DOUBLE},
      </if>
      <if test="expectStartLongitude != null">
        #{expectStartLongitude,jdbcType=DOUBLE},
      </if>
      <if test="expectEndLatitude != null">
        #{expectEndLatitude,jdbcType=DOUBLE},
      </if>
      <if test="expectEndLongitude != null">
        #{expectEndLongitude,jdbcType=DOUBLE},
      </if>
      <if test="startLatitude != null">
        #{startLatitude,jdbcType=DOUBLE},
      </if>
      <if test="startLongitude != null">
        #{startLongitude,jdbcType=DOUBLE},
      </if>
      <if test="endLatitude != null">
        #{endLatitude,jdbcType=DOUBLE},
      </if>
      <if test="endLongitude != null">
        #{endLongitude,jdbcType=DOUBLE},
      </if>
      <if test="payment != null">
        #{payment,jdbcType=INTEGER},
      </if>
      <if test="payStatus != null">
        #{payStatus,jdbcType=TINYINT},
      </if>
      <if test="payTime != null">
        #{payTime,jdbcType=INTEGER},
      </if>
      <if test="firstRechargeTransactionId != null">
        #{firstRechargeTransactionId,jdbcType=BIGINT},
      </if>
      <if test="firstRechargeAmount != null">
        #{firstRechargeAmount,jdbcType=DECIMAL},
      </if>
      <if test="couponMemberId != null">
        #{couponMemberId,jdbcType=BIGINT},
      </if>
      <if test="couponName != null">
        #{couponName,jdbcType=VARCHAR},
      </if>
      <if test="couponType != null">
        #{couponType,jdbcType=TINYINT},
      </if>
      <if test="couponFacevalue != null">
        #{couponFacevalue,jdbcType=DECIMAL},
      </if>
      <if test="discount != null">
        #{discount,jdbcType=DECIMAL},
      </if>
      <if test="version != null">
        #{version,jdbcType=INTEGER},
      </if>
      <if test="feeVersion != null">
        #{feeVersion,jdbcType=INTEGER},
      </if>
      <if test="refundStatus != null">
        #{refundStatus,jdbcType=TINYINT},
      </if>
      <if test="payMethod != null">
        #{payMethod,jdbcType=TINYINT},
      </if>
      <if test="balanceStatus != null">
        #{balanceStatus,jdbcType=TINYINT},
      </if>
      <if test="payable != null">
        #{payable,jdbcType=TINYINT},
      </if>
      <if test="totalAmount != null">
        #{totalAmount,jdbcType=DECIMAL},
      </if>
      <if test="deposit != null">
        #{deposit,jdbcType=DECIMAL},
      </if>
      <if test="loanInCredit != null">
        #{loanInCredit,jdbcType=DECIMAL},
      </if>
      <if test="payAmount != null">
        #{payAmount,jdbcType=DECIMAL},
      </if>
      <if test="minAmount != null">
        #{minAmount,jdbcType=DECIMAL},
      </if>
      <if test="originAmount != null">
        #{originAmount,jdbcType=DECIMAL},
      </if>
      <if test="originSharingAmount != null">
        #{originSharingAmount,jdbcType=DECIMAL},
      </if>
      <if test="sharingAmount != null">
        #{sharingAmount,jdbcType=DECIMAL},
      </if>
      <if test="wxOrderSn != null">
        #{wxOrderSn,jdbcType=VARCHAR},
      </if>
      <if test="payId != null">
        #{payId,jdbcType=VARCHAR},
      </if>
      <if test="refundAmount != null">
        #{refundAmount,jdbcType=DECIMAL},
      </if>
      <if test="refundType != null">
        #{refundType,jdbcType=VARCHAR},
      </if>
      <if test="refundContent != null">
        #{refundContent,jdbcType=VARCHAR},
      </if>
      <if test="refundTime != null">
        #{refundTime,jdbcType=INTEGER},
      </if>
      <if test="actualTimeLength != null">
        #{actualTimeLength,jdbcType=INTEGER},
      </if>
      <if test="dependableDistance != null">
        #{dependableDistance,jdbcType=INTEGER},
      </if>
      <if test="mileage != null">
        #{mileage,jdbcType=INTEGER},
      </if>
      <if test="systemDistance != null">
        #{systemDistance,jdbcType=INTEGER},
      </if>
      <if test="alitongxinSecretNoX != null">
        #{alitongxinSecretNoX,jdbcType=VARCHAR},
      </if>
      <if test="alitongxinSubsId != null">
        #{alitongxinSubsId,jdbcType=BIGINT},
      </if>
      <if test="alitongxinStatus != null">
        #{alitongxinStatus,jdbcType=TINYINT},
      </if>
      <if test="passengerSessionId != null">
        #{passengerSessionId,jdbcType=VARCHAR},
      </if>
      <if test="lastOperator != null">
        #{lastOperator,jdbcType=VARCHAR},
      </if>
      <if test="carColor != null">
        #{carColor,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yongche.yopsaas.db.domain.YopsaasRideOrderExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from yopsaas_ride_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update yopsaas_ride_order
    <set>
      <if test="record.rideOrderId != null">
        ride_order_id = #{record.rideOrderId,jdbcType=BIGINT},
      </if>
      <if test="record.ycOrderId != null">
        yc_order_id = #{record.ycOrderId,jdbcType=BIGINT},
      </if>
      <if test="record.productTypeId != null">
        product_type_id = #{record.productTypeId,jdbcType=INTEGER},
      </if>
      <if test="record.fixedProductId != null">
        fixed_product_id = #{record.fixedProductId,jdbcType=INTEGER},
      </if>
      <if test="record.isAsap != null">
        is_asap = #{record.isAsap,jdbcType=TINYINT},
      </if>
      <if test="record.source != null">
        `source` = #{record.source,jdbcType=INTEGER},
      </if>
      <if test="record.platform != null">
        platform = #{record.platform,jdbcType=TINYINT},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.rcStatus != null">
        rc_status = #{record.rcStatus,jdbcType=TINYINT},
      </if>
      <if test="record.endStatus != null">
        end_status = #{record.endStatus,jdbcType=TINYINT},
      </if>
      <if test="record.abnormalMark != null">
        abnormal_mark = #{record.abnormalMark,jdbcType=TINYINT},
      </if>
      <if test="record.flag != null">
        flag = #{record.flag,jdbcType=BIGINT},
      </if>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.userPhone != null">
        user_phone = #{record.userPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.passengerName != null">
        passenger_name = #{record.passengerName,jdbcType=VARCHAR},
      </if>
      <if test="record.passengerPhone != null">
        passenger_phone = #{record.passengerPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.corporateId != null">
        corporate_id = #{record.corporateId,jdbcType=BIGINT},
      </if>
      <if test="record.corporateDeptId != null">
        corporate_dept_id = #{record.corporateDeptId,jdbcType=INTEGER},
      </if>
      <if test="record.city != null">
        city = #{record.city,jdbcType=VARCHAR},
      </if>
      <if test="record.reasonId != null">
        reason_id = #{record.reasonId,jdbcType=INTEGER},
      </if>
      <if test="record.flightNumber != null">
        flight_number = #{record.flightNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=INTEGER},
      </if>
      <if test="record.initTime != null">
        init_time = #{record.initTime,jdbcType=INTEGER},
      </if>
      <if test="record.selectCarTime != null">
        select_car_time = #{record.selectCarTime,jdbcType=INTEGER},
      </if>
      <if test="record.arrivalTime != null">
        arrival_time = #{record.arrivalTime,jdbcType=INTEGER},
      </if>
      <if test="record.cancelTime != null">
        cancel_time = #{record.cancelTime,jdbcType=INTEGER},
      </if>
      <if test="record.carId != null">
        car_id = #{record.carId,jdbcType=INTEGER},
      </if>
      <if test="record.carTypeId != null">
        car_type_id = #{record.carTypeId,jdbcType=INTEGER},
      </if>
      <if test="record.carTypeIds != null">
        car_type_ids = #{record.carTypeIds,jdbcType=VARCHAR},
      </if>
      <if test="record.carType != null">
        car_type = #{record.carType,jdbcType=VARCHAR},
      </if>
      <if test="record.carBrand != null">
        car_brand = #{record.carBrand,jdbcType=VARCHAR},
      </if>
      <if test="record.driverId != null">
        driver_id = #{record.driverId,jdbcType=INTEGER},
      </if>
      <if test="record.driverPhone != null">
        driver_phone = #{record.driverPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.driverName != null">
        driver_name = #{record.driverName,jdbcType=VARCHAR},
      </if>
      <if test="record.vehicleNumber != null">
        vehicle_number = #{record.vehicleNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.expectStartTime != null">
        expect_start_time = #{record.expectStartTime,jdbcType=INTEGER},
      </if>
      <if test="record.expectEndTime != null">
        expect_end_time = #{record.expectEndTime,jdbcType=INTEGER},
      </if>
      <if test="record.timeLength != null">
        time_length = #{record.timeLength,jdbcType=INTEGER},
      </if>
      <if test="record.startTime != null">
        start_time = #{record.startTime,jdbcType=INTEGER},
      </if>
      <if test="record.endTime != null">
        end_time = #{record.endTime,jdbcType=INTEGER},
      </if>
      <if test="record.confirmTime != null">
        confirm_time = #{record.confirmTime,jdbcType=INTEGER},
      </if>
      <if test="record.startPosition != null">
        start_position = #{record.startPosition,jdbcType=VARCHAR},
      </if>
      <if test="record.startAddress != null">
        start_address = #{record.startAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.endPosition != null">
        end_position = #{record.endPosition,jdbcType=VARCHAR},
      </if>
      <if test="record.endAddress != null">
        end_address = #{record.endAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.expectStartLatitude != null">
        expect_start_latitude = #{record.expectStartLatitude,jdbcType=DOUBLE},
      </if>
      <if test="record.expectStartLongitude != null">
        expect_start_longitude = #{record.expectStartLongitude,jdbcType=DOUBLE},
      </if>
      <if test="record.expectEndLatitude != null">
        expect_end_latitude = #{record.expectEndLatitude,jdbcType=DOUBLE},
      </if>
      <if test="record.expectEndLongitude != null">
        expect_end_longitude = #{record.expectEndLongitude,jdbcType=DOUBLE},
      </if>
      <if test="record.startLatitude != null">
        start_latitude = #{record.startLatitude,jdbcType=DOUBLE},
      </if>
      <if test="record.startLongitude != null">
        start_longitude = #{record.startLongitude,jdbcType=DOUBLE},
      </if>
      <if test="record.endLatitude != null">
        end_latitude = #{record.endLatitude,jdbcType=DOUBLE},
      </if>
      <if test="record.endLongitude != null">
        end_longitude = #{record.endLongitude,jdbcType=DOUBLE},
      </if>
      <if test="record.payment != null">
        payment = #{record.payment,jdbcType=INTEGER},
      </if>
      <if test="record.payStatus != null">
        pay_status = #{record.payStatus,jdbcType=TINYINT},
      </if>
      <if test="record.payTime != null">
        pay_time = #{record.payTime,jdbcType=INTEGER},
      </if>
      <if test="record.firstRechargeTransactionId != null">
        first_recharge_transaction_id = #{record.firstRechargeTransactionId,jdbcType=BIGINT},
      </if>
      <if test="record.firstRechargeAmount != null">
        first_recharge_amount = #{record.firstRechargeAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.couponMemberId != null">
        coupon_member_id = #{record.couponMemberId,jdbcType=BIGINT},
      </if>
      <if test="record.couponName != null">
        coupon_name = #{record.couponName,jdbcType=VARCHAR},
      </if>
      <if test="record.couponType != null">
        coupon_type = #{record.couponType,jdbcType=TINYINT},
      </if>
      <if test="record.couponFacevalue != null">
        coupon_facevalue = #{record.couponFacevalue,jdbcType=DECIMAL},
      </if>
      <if test="record.discount != null">
        discount = #{record.discount,jdbcType=DECIMAL},
      </if>
      <if test="record.version != null">
        version = #{record.version,jdbcType=INTEGER},
      </if>
      <if test="record.feeVersion != null">
        fee_version = #{record.feeVersion,jdbcType=INTEGER},
      </if>
      <if test="record.refundStatus != null">
        refund_status = #{record.refundStatus,jdbcType=TINYINT},
      </if>
      <if test="record.payMethod != null">
        pay_method = #{record.payMethod,jdbcType=TINYINT},
      </if>
      <if test="record.balanceStatus != null">
        balance_status = #{record.balanceStatus,jdbcType=TINYINT},
      </if>
      <if test="record.payable != null">
        payable = #{record.payable,jdbcType=TINYINT},
      </if>
      <if test="record.totalAmount != null">
        total_amount = #{record.totalAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.deposit != null">
        deposit = #{record.deposit,jdbcType=DECIMAL},
      </if>
      <if test="record.loanInCredit != null">
        loan_in_credit = #{record.loanInCredit,jdbcType=DECIMAL},
      </if>
      <if test="record.payAmount != null">
        pay_amount = #{record.payAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.minAmount != null">
        min_amount = #{record.minAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.originAmount != null">
        origin_amount = #{record.originAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.originSharingAmount != null">
        origin_sharing_amount = #{record.originSharingAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.sharingAmount != null">
        sharing_amount = #{record.sharingAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.wxOrderSn != null">
        wx_order_sn = #{record.wxOrderSn,jdbcType=VARCHAR},
      </if>
      <if test="record.payId != null">
        pay_id = #{record.payId,jdbcType=VARCHAR},
      </if>
      <if test="record.refundAmount != null">
        refund_amount = #{record.refundAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.refundType != null">
        refund_type = #{record.refundType,jdbcType=VARCHAR},
      </if>
      <if test="record.refundContent != null">
        refund_content = #{record.refundContent,jdbcType=VARCHAR},
      </if>
      <if test="record.refundTime != null">
        refund_time = #{record.refundTime,jdbcType=INTEGER},
      </if>
      <if test="record.actualTimeLength != null">
        actual_time_length = #{record.actualTimeLength,jdbcType=INTEGER},
      </if>
      <if test="record.dependableDistance != null">
        dependable_distance = #{record.dependableDistance,jdbcType=INTEGER},
      </if>
      <if test="record.mileage != null">
        mileage = #{record.mileage,jdbcType=INTEGER},
      </if>
      <if test="record.systemDistance != null">
        system_distance = #{record.systemDistance,jdbcType=INTEGER},
      </if>
      <if test="record.alitongxinSecretNoX != null">
        alitongxin_secret_no_x = #{record.alitongxinSecretNoX,jdbcType=VARCHAR},
      </if>
      <if test="record.alitongxinSubsId != null">
        alitongxin_subs_id = #{record.alitongxinSubsId,jdbcType=BIGINT},
      </if>
      <if test="record.alitongxinStatus != null">
        alitongxin_status = #{record.alitongxinStatus,jdbcType=TINYINT},
      </if>
      <if test="record.passengerSessionId != null">
        passenger_session_id = #{record.passengerSessionId,jdbcType=VARCHAR},
      </if>
      <if test="record.lastOperator != null">
        last_operator = #{record.lastOperator,jdbcType=VARCHAR},
      </if>
      <if test="record.carColor != null">
        car_color = #{record.carColor,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update yopsaas_ride_order
    set ride_order_id = #{record.rideOrderId,jdbcType=BIGINT},
      yc_order_id = #{record.ycOrderId,jdbcType=BIGINT},
      product_type_id = #{record.productTypeId,jdbcType=INTEGER},
      fixed_product_id = #{record.fixedProductId,jdbcType=INTEGER},
      is_asap = #{record.isAsap,jdbcType=TINYINT},
      `source` = #{record.source,jdbcType=INTEGER},
      platform = #{record.platform,jdbcType=TINYINT},
      `status` = #{record.status,jdbcType=TINYINT},
      rc_status = #{record.rcStatus,jdbcType=TINYINT},
      end_status = #{record.endStatus,jdbcType=TINYINT},
      abnormal_mark = #{record.abnormalMark,jdbcType=TINYINT},
      flag = #{record.flag,jdbcType=BIGINT},
      account_id = #{record.accountId,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=BIGINT},
      user_phone = #{record.userPhone,jdbcType=VARCHAR},
      passenger_name = #{record.passengerName,jdbcType=VARCHAR},
      passenger_phone = #{record.passengerPhone,jdbcType=VARCHAR},
      corporate_id = #{record.corporateId,jdbcType=BIGINT},
      corporate_dept_id = #{record.corporateDeptId,jdbcType=INTEGER},
      city = #{record.city,jdbcType=VARCHAR},
      reason_id = #{record.reasonId,jdbcType=INTEGER},
      flight_number = #{record.flightNumber,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=INTEGER},
      init_time = #{record.initTime,jdbcType=INTEGER},
      select_car_time = #{record.selectCarTime,jdbcType=INTEGER},
      arrival_time = #{record.arrivalTime,jdbcType=INTEGER},
      cancel_time = #{record.cancelTime,jdbcType=INTEGER},
      car_id = #{record.carId,jdbcType=INTEGER},
      car_type_id = #{record.carTypeId,jdbcType=INTEGER},
      car_type_ids = #{record.carTypeIds,jdbcType=VARCHAR},
      car_type = #{record.carType,jdbcType=VARCHAR},
      car_brand = #{record.carBrand,jdbcType=VARCHAR},
      driver_id = #{record.driverId,jdbcType=INTEGER},
      driver_phone = #{record.driverPhone,jdbcType=VARCHAR},
      driver_name = #{record.driverName,jdbcType=VARCHAR},
      vehicle_number = #{record.vehicleNumber,jdbcType=VARCHAR},
      expect_start_time = #{record.expectStartTime,jdbcType=INTEGER},
      expect_end_time = #{record.expectEndTime,jdbcType=INTEGER},
      time_length = #{record.timeLength,jdbcType=INTEGER},
      start_time = #{record.startTime,jdbcType=INTEGER},
      end_time = #{record.endTime,jdbcType=INTEGER},
      confirm_time = #{record.confirmTime,jdbcType=INTEGER},
      start_position = #{record.startPosition,jdbcType=VARCHAR},
      start_address = #{record.startAddress,jdbcType=VARCHAR},
      end_position = #{record.endPosition,jdbcType=VARCHAR},
      end_address = #{record.endAddress,jdbcType=VARCHAR},
      expect_start_latitude = #{record.expectStartLatitude,jdbcType=DOUBLE},
      expect_start_longitude = #{record.expectStartLongitude,jdbcType=DOUBLE},
      expect_end_latitude = #{record.expectEndLatitude,jdbcType=DOUBLE},
      expect_end_longitude = #{record.expectEndLongitude,jdbcType=DOUBLE},
      start_latitude = #{record.startLatitude,jdbcType=DOUBLE},
      start_longitude = #{record.startLongitude,jdbcType=DOUBLE},
      end_latitude = #{record.endLatitude,jdbcType=DOUBLE},
      end_longitude = #{record.endLongitude,jdbcType=DOUBLE},
      payment = #{record.payment,jdbcType=INTEGER},
      pay_status = #{record.payStatus,jdbcType=TINYINT},
      pay_time = #{record.payTime,jdbcType=INTEGER},
      first_recharge_transaction_id = #{record.firstRechargeTransactionId,jdbcType=BIGINT},
      first_recharge_amount = #{record.firstRechargeAmount,jdbcType=DECIMAL},
      coupon_member_id = #{record.couponMemberId,jdbcType=BIGINT},
      coupon_name = #{record.couponName,jdbcType=VARCHAR},
      coupon_type = #{record.couponType,jdbcType=TINYINT},
      coupon_facevalue = #{record.couponFacevalue,jdbcType=DECIMAL},
      discount = #{record.discount,jdbcType=DECIMAL},
      version = #{record.version,jdbcType=INTEGER},
      fee_version = #{record.feeVersion,jdbcType=INTEGER},
      refund_status = #{record.refundStatus,jdbcType=TINYINT},
      pay_method = #{record.payMethod,jdbcType=TINYINT},
      balance_status = #{record.balanceStatus,jdbcType=TINYINT},
      payable = #{record.payable,jdbcType=TINYINT},
      total_amount = #{record.totalAmount,jdbcType=DECIMAL},
      deposit = #{record.deposit,jdbcType=DECIMAL},
      loan_in_credit = #{record.loanInCredit,jdbcType=DECIMAL},
      pay_amount = #{record.payAmount,jdbcType=DECIMAL},
      min_amount = #{record.minAmount,jdbcType=DECIMAL},
      origin_amount = #{record.originAmount,jdbcType=DECIMAL},
      origin_sharing_amount = #{record.originSharingAmount,jdbcType=DECIMAL},
      sharing_amount = #{record.sharingAmount,jdbcType=DECIMAL},
      wx_order_sn = #{record.wxOrderSn,jdbcType=VARCHAR},
      pay_id = #{record.payId,jdbcType=VARCHAR},
      refund_amount = #{record.refundAmount,jdbcType=DECIMAL},
      refund_type = #{record.refundType,jdbcType=VARCHAR},
      refund_content = #{record.refundContent,jdbcType=VARCHAR},
      refund_time = #{record.refundTime,jdbcType=INTEGER},
      actual_time_length = #{record.actualTimeLength,jdbcType=INTEGER},
      dependable_distance = #{record.dependableDistance,jdbcType=INTEGER},
      mileage = #{record.mileage,jdbcType=INTEGER},
      system_distance = #{record.systemDistance,jdbcType=INTEGER},
      alitongxin_secret_no_x = #{record.alitongxinSecretNoX,jdbcType=VARCHAR},
      alitongxin_subs_id = #{record.alitongxinSubsId,jdbcType=BIGINT},
      alitongxin_status = #{record.alitongxinStatus,jdbcType=TINYINT},
      passenger_session_id = #{record.passengerSessionId,jdbcType=VARCHAR},
      last_operator = #{record.lastOperator,jdbcType=VARCHAR},
      car_color = #{record.carColor,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yongche.yopsaas.db.domain.YopsaasRideOrder">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update yopsaas_ride_order
    <set>
      <if test="ycOrderId != null">
        yc_order_id = #{ycOrderId,jdbcType=BIGINT},
      </if>
      <if test="productTypeId != null">
        product_type_id = #{productTypeId,jdbcType=INTEGER},
      </if>
      <if test="fixedProductId != null">
        fixed_product_id = #{fixedProductId,jdbcType=INTEGER},
      </if>
      <if test="isAsap != null">
        is_asap = #{isAsap,jdbcType=TINYINT},
      </if>
      <if test="source != null">
        `source` = #{source,jdbcType=INTEGER},
      </if>
      <if test="platform != null">
        platform = #{platform,jdbcType=TINYINT},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=TINYINT},
      </if>
      <if test="rcStatus != null">
        rc_status = #{rcStatus,jdbcType=TINYINT},
      </if>
      <if test="endStatus != null">
        end_status = #{endStatus,jdbcType=TINYINT},
      </if>
      <if test="abnormalMark != null">
        abnormal_mark = #{abnormalMark,jdbcType=TINYINT},
      </if>
      <if test="flag != null">
        flag = #{flag,jdbcType=BIGINT},
      </if>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="userPhone != null">
        user_phone = #{userPhone,jdbcType=VARCHAR},
      </if>
      <if test="passengerName != null">
        passenger_name = #{passengerName,jdbcType=VARCHAR},
      </if>
      <if test="passengerPhone != null">
        passenger_phone = #{passengerPhone,jdbcType=VARCHAR},
      </if>
      <if test="corporateId != null">
        corporate_id = #{corporateId,jdbcType=BIGINT},
      </if>
      <if test="corporateDeptId != null">
        corporate_dept_id = #{corporateDeptId,jdbcType=INTEGER},
      </if>
      <if test="city != null">
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="reasonId != null">
        reason_id = #{reasonId,jdbcType=INTEGER},
      </if>
      <if test="flightNumber != null">
        flight_number = #{flightNumber,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=INTEGER},
      </if>
      <if test="initTime != null">
        init_time = #{initTime,jdbcType=INTEGER},
      </if>
      <if test="selectCarTime != null">
        select_car_time = #{selectCarTime,jdbcType=INTEGER},
      </if>
      <if test="arrivalTime != null">
        arrival_time = #{arrivalTime,jdbcType=INTEGER},
      </if>
      <if test="cancelTime != null">
        cancel_time = #{cancelTime,jdbcType=INTEGER},
      </if>
      <if test="carId != null">
        car_id = #{carId,jdbcType=INTEGER},
      </if>
      <if test="carTypeId != null">
        car_type_id = #{carTypeId,jdbcType=INTEGER},
      </if>
      <if test="carTypeIds != null">
        car_type_ids = #{carTypeIds,jdbcType=VARCHAR},
      </if>
      <if test="carType != null">
        car_type = #{carType,jdbcType=VARCHAR},
      </if>
      <if test="carBrand != null">
        car_brand = #{carBrand,jdbcType=VARCHAR},
      </if>
      <if test="driverId != null">
        driver_id = #{driverId,jdbcType=INTEGER},
      </if>
      <if test="driverPhone != null">
        driver_phone = #{driverPhone,jdbcType=VARCHAR},
      </if>
      <if test="driverName != null">
        driver_name = #{driverName,jdbcType=VARCHAR},
      </if>
      <if test="vehicleNumber != null">
        vehicle_number = #{vehicleNumber,jdbcType=VARCHAR},
      </if>
      <if test="expectStartTime != null">
        expect_start_time = #{expectStartTime,jdbcType=INTEGER},
      </if>
      <if test="expectEndTime != null">
        expect_end_time = #{expectEndTime,jdbcType=INTEGER},
      </if>
      <if test="timeLength != null">
        time_length = #{timeLength,jdbcType=INTEGER},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=INTEGER},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=INTEGER},
      </if>
      <if test="confirmTime != null">
        confirm_time = #{confirmTime,jdbcType=INTEGER},
      </if>
      <if test="startPosition != null">
        start_position = #{startPosition,jdbcType=VARCHAR},
      </if>
      <if test="startAddress != null">
        start_address = #{startAddress,jdbcType=VARCHAR},
      </if>
      <if test="endPosition != null">
        end_position = #{endPosition,jdbcType=VARCHAR},
      </if>
      <if test="endAddress != null">
        end_address = #{endAddress,jdbcType=VARCHAR},
      </if>
      <if test="expectStartLatitude != null">
        expect_start_latitude = #{expectStartLatitude,jdbcType=DOUBLE},
      </if>
      <if test="expectStartLongitude != null">
        expect_start_longitude = #{expectStartLongitude,jdbcType=DOUBLE},
      </if>
      <if test="expectEndLatitude != null">
        expect_end_latitude = #{expectEndLatitude,jdbcType=DOUBLE},
      </if>
      <if test="expectEndLongitude != null">
        expect_end_longitude = #{expectEndLongitude,jdbcType=DOUBLE},
      </if>
      <if test="startLatitude != null">
        start_latitude = #{startLatitude,jdbcType=DOUBLE},
      </if>
      <if test="startLongitude != null">
        start_longitude = #{startLongitude,jdbcType=DOUBLE},
      </if>
      <if test="endLatitude != null">
        end_latitude = #{endLatitude,jdbcType=DOUBLE},
      </if>
      <if test="endLongitude != null">
        end_longitude = #{endLongitude,jdbcType=DOUBLE},
      </if>
      <if test="payment != null">
        payment = #{payment,jdbcType=INTEGER},
      </if>
      <if test="payStatus != null">
        pay_status = #{payStatus,jdbcType=TINYINT},
      </if>
      <if test="payTime != null">
        pay_time = #{payTime,jdbcType=INTEGER},
      </if>
      <if test="firstRechargeTransactionId != null">
        first_recharge_transaction_id = #{firstRechargeTransactionId,jdbcType=BIGINT},
      </if>
      <if test="firstRechargeAmount != null">
        first_recharge_amount = #{firstRechargeAmount,jdbcType=DECIMAL},
      </if>
      <if test="couponMemberId != null">
        coupon_member_id = #{couponMemberId,jdbcType=BIGINT},
      </if>
      <if test="couponName != null">
        coupon_name = #{couponName,jdbcType=VARCHAR},
      </if>
      <if test="couponType != null">
        coupon_type = #{couponType,jdbcType=TINYINT},
      </if>
      <if test="couponFacevalue != null">
        coupon_facevalue = #{couponFacevalue,jdbcType=DECIMAL},
      </if>
      <if test="discount != null">
        discount = #{discount,jdbcType=DECIMAL},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=INTEGER},
      </if>
      <if test="feeVersion != null">
        fee_version = #{feeVersion,jdbcType=INTEGER},
      </if>
      <if test="refundStatus != null">
        refund_status = #{refundStatus,jdbcType=TINYINT},
      </if>
      <if test="payMethod != null">
        pay_method = #{payMethod,jdbcType=TINYINT},
      </if>
      <if test="balanceStatus != null">
        balance_status = #{balanceStatus,jdbcType=TINYINT},
      </if>
      <if test="payable != null">
        payable = #{payable,jdbcType=TINYINT},
      </if>
      <if test="totalAmount != null">
        total_amount = #{totalAmount,jdbcType=DECIMAL},
      </if>
      <if test="deposit != null">
        deposit = #{deposit,jdbcType=DECIMAL},
      </if>
      <if test="loanInCredit != null">
        loan_in_credit = #{loanInCredit,jdbcType=DECIMAL},
      </if>
      <if test="payAmount != null">
        pay_amount = #{payAmount,jdbcType=DECIMAL},
      </if>
      <if test="minAmount != null">
        min_amount = #{minAmount,jdbcType=DECIMAL},
      </if>
      <if test="originAmount != null">
        origin_amount = #{originAmount,jdbcType=DECIMAL},
      </if>
      <if test="originSharingAmount != null">
        origin_sharing_amount = #{originSharingAmount,jdbcType=DECIMAL},
      </if>
      <if test="sharingAmount != null">
        sharing_amount = #{sharingAmount,jdbcType=DECIMAL},
      </if>
      <if test="wxOrderSn != null">
        wx_order_sn = #{wxOrderSn,jdbcType=VARCHAR},
      </if>
      <if test="payId != null">
        pay_id = #{payId,jdbcType=VARCHAR},
      </if>
      <if test="refundAmount != null">
        refund_amount = #{refundAmount,jdbcType=DECIMAL},
      </if>
      <if test="refundType != null">
        refund_type = #{refundType,jdbcType=VARCHAR},
      </if>
      <if test="refundContent != null">
        refund_content = #{refundContent,jdbcType=VARCHAR},
      </if>
      <if test="refundTime != null">
        refund_time = #{refundTime,jdbcType=INTEGER},
      </if>
      <if test="actualTimeLength != null">
        actual_time_length = #{actualTimeLength,jdbcType=INTEGER},
      </if>
      <if test="dependableDistance != null">
        dependable_distance = #{dependableDistance,jdbcType=INTEGER},
      </if>
      <if test="mileage != null">
        mileage = #{mileage,jdbcType=INTEGER},
      </if>
      <if test="systemDistance != null">
        system_distance = #{systemDistance,jdbcType=INTEGER},
      </if>
      <if test="alitongxinSecretNoX != null">
        alitongxin_secret_no_x = #{alitongxinSecretNoX,jdbcType=VARCHAR},
      </if>
      <if test="alitongxinSubsId != null">
        alitongxin_subs_id = #{alitongxinSubsId,jdbcType=BIGINT},
      </if>
      <if test="alitongxinStatus != null">
        alitongxin_status = #{alitongxinStatus,jdbcType=TINYINT},
      </if>
      <if test="passengerSessionId != null">
        passenger_session_id = #{passengerSessionId,jdbcType=VARCHAR},
      </if>
      <if test="lastOperator != null">
        last_operator = #{lastOperator,jdbcType=VARCHAR},
      </if>
      <if test="carColor != null">
        car_color = #{carColor,jdbcType=VARCHAR},
      </if>
    </set>
    where ride_order_id = #{rideOrderId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yongche.yopsaas.db.domain.YopsaasRideOrder">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update yopsaas_ride_order
    set yc_order_id = #{ycOrderId,jdbcType=BIGINT},
      product_type_id = #{productTypeId,jdbcType=INTEGER},
      fixed_product_id = #{fixedProductId,jdbcType=INTEGER},
      is_asap = #{isAsap,jdbcType=TINYINT},
      `source` = #{source,jdbcType=INTEGER},
      platform = #{platform,jdbcType=TINYINT},
      `status` = #{status,jdbcType=TINYINT},
      rc_status = #{rcStatus,jdbcType=TINYINT},
      end_status = #{endStatus,jdbcType=TINYINT},
      abnormal_mark = #{abnormalMark,jdbcType=TINYINT},
      flag = #{flag,jdbcType=BIGINT},
      account_id = #{accountId,jdbcType=BIGINT},
      user_id = #{userId,jdbcType=BIGINT},
      user_phone = #{userPhone,jdbcType=VARCHAR},
      passenger_name = #{passengerName,jdbcType=VARCHAR},
      passenger_phone = #{passengerPhone,jdbcType=VARCHAR},
      corporate_id = #{corporateId,jdbcType=BIGINT},
      corporate_dept_id = #{corporateDeptId,jdbcType=INTEGER},
      city = #{city,jdbcType=VARCHAR},
      reason_id = #{reasonId,jdbcType=INTEGER},
      flight_number = #{flightNumber,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=INTEGER},
      init_time = #{initTime,jdbcType=INTEGER},
      select_car_time = #{selectCarTime,jdbcType=INTEGER},
      arrival_time = #{arrivalTime,jdbcType=INTEGER},
      cancel_time = #{cancelTime,jdbcType=INTEGER},
      car_id = #{carId,jdbcType=INTEGER},
      car_type_id = #{carTypeId,jdbcType=INTEGER},
      car_type_ids = #{carTypeIds,jdbcType=VARCHAR},
      car_type = #{carType,jdbcType=VARCHAR},
      car_brand = #{carBrand,jdbcType=VARCHAR},
      driver_id = #{driverId,jdbcType=INTEGER},
      driver_phone = #{driverPhone,jdbcType=VARCHAR},
      driver_name = #{driverName,jdbcType=VARCHAR},
      vehicle_number = #{vehicleNumber,jdbcType=VARCHAR},
      expect_start_time = #{expectStartTime,jdbcType=INTEGER},
      expect_end_time = #{expectEndTime,jdbcType=INTEGER},
      time_length = #{timeLength,jdbcType=INTEGER},
      start_time = #{startTime,jdbcType=INTEGER},
      end_time = #{endTime,jdbcType=INTEGER},
      confirm_time = #{confirmTime,jdbcType=INTEGER},
      start_position = #{startPosition,jdbcType=VARCHAR},
      start_address = #{startAddress,jdbcType=VARCHAR},
      end_position = #{endPosition,jdbcType=VARCHAR},
      end_address = #{endAddress,jdbcType=VARCHAR},
      expect_start_latitude = #{expectStartLatitude,jdbcType=DOUBLE},
      expect_start_longitude = #{expectStartLongitude,jdbcType=DOUBLE},
      expect_end_latitude = #{expectEndLatitude,jdbcType=DOUBLE},
      expect_end_longitude = #{expectEndLongitude,jdbcType=DOUBLE},
      start_latitude = #{startLatitude,jdbcType=DOUBLE},
      start_longitude = #{startLongitude,jdbcType=DOUBLE},
      end_latitude = #{endLatitude,jdbcType=DOUBLE},
      end_longitude = #{endLongitude,jdbcType=DOUBLE},
      payment = #{payment,jdbcType=INTEGER},
      pay_status = #{payStatus,jdbcType=TINYINT},
      pay_time = #{payTime,jdbcType=INTEGER},
      first_recharge_transaction_id = #{firstRechargeTransactionId,jdbcType=BIGINT},
      first_recharge_amount = #{firstRechargeAmount,jdbcType=DECIMAL},
      coupon_member_id = #{couponMemberId,jdbcType=BIGINT},
      coupon_name = #{couponName,jdbcType=VARCHAR},
      coupon_type = #{couponType,jdbcType=TINYINT},
      coupon_facevalue = #{couponFacevalue,jdbcType=DECIMAL},
      discount = #{discount,jdbcType=DECIMAL},
      version = #{version,jdbcType=INTEGER},
      fee_version = #{feeVersion,jdbcType=INTEGER},
      refund_status = #{refundStatus,jdbcType=TINYINT},
      pay_method = #{payMethod,jdbcType=TINYINT},
      balance_status = #{balanceStatus,jdbcType=TINYINT},
      payable = #{payable,jdbcType=TINYINT},
      total_amount = #{totalAmount,jdbcType=DECIMAL},
      deposit = #{deposit,jdbcType=DECIMAL},
      loan_in_credit = #{loanInCredit,jdbcType=DECIMAL},
      pay_amount = #{payAmount,jdbcType=DECIMAL},
      min_amount = #{minAmount,jdbcType=DECIMAL},
      origin_amount = #{originAmount,jdbcType=DECIMAL},
      origin_sharing_amount = #{originSharingAmount,jdbcType=DECIMAL},
      sharing_amount = #{sharingAmount,jdbcType=DECIMAL},
      wx_order_sn = #{wxOrderSn,jdbcType=VARCHAR},
      pay_id = #{payId,jdbcType=VARCHAR},
      refund_amount = #{refundAmount,jdbcType=DECIMAL},
      refund_type = #{refundType,jdbcType=VARCHAR},
      refund_content = #{refundContent,jdbcType=VARCHAR},
      refund_time = #{refundTime,jdbcType=INTEGER},
      actual_time_length = #{actualTimeLength,jdbcType=INTEGER},
      dependable_distance = #{dependableDistance,jdbcType=INTEGER},
      mileage = #{mileage,jdbcType=INTEGER},
      system_distance = #{systemDistance,jdbcType=INTEGER},
      alitongxin_secret_no_x = #{alitongxinSecretNoX,jdbcType=VARCHAR},
      alitongxin_subs_id = #{alitongxinSubsId,jdbcType=BIGINT},
      alitongxin_status = #{alitongxinStatus,jdbcType=TINYINT},
      passenger_session_id = #{passengerSessionId,jdbcType=VARCHAR},
      last_operator = #{lastOperator,jdbcType=VARCHAR},
      car_color = #{carColor,jdbcType=VARCHAR}
    where ride_order_id = #{rideOrderId,jdbcType=BIGINT}
  </update>
  <select id="selectOneByExample" parameterType="com.yongche.yopsaas.db.domain.YopsaasRideOrderExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <include refid="Base_Column_List" />
    from yopsaas_ride_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <select id="selectOneByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <choose>
      <when test="selective != null and selective.length &gt; 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from yopsaas_ride_order
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    limit 1
  </select>
</mapper>