<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yongche.yopsaas.db.dao.YopsaasRideOrderExtMapper">
  <resultMap id="BaseResultMap" type="com.yongche.yopsaas.db.domain.YopsaasRideOrderExt">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="ride_order_id" jdbcType="BIGINT" property="rideOrderId" />
    <result column="operator_id" jdbcType="INTEGER" property="operatorId" />
    <result column="user_type" jdbcType="TINYINT" property="userType" />
    <result column="sms" jdbcType="INTEGER" property="sms" />
    <result column="create_order_longitude" jdbcType="DOUBLE" property="createOrderLongitude" />
    <result column="create_order_latitude" jdbcType="DOUBLE" property="createOrderLatitude" />
    <result column="confirm_latitude" jdbcType="DOUBLE" property="confirmLatitude" />
    <result column="confirm_longitude" jdbcType="DOUBLE" property="confirmLongitude" />
    <result column="arrive_latitude" jdbcType="DOUBLE" property="arriveLatitude" />
    <result column="arrive_longitude" jdbcType="DOUBLE" property="arriveLongitude" />
    <result column="src_city_name" jdbcType="VARCHAR" property="srcCityName" />
    <result column="dst_city_name" jdbcType="VARCHAR" property="dstCityName" />
    <result column="dest_city" jdbcType="VARCHAR" property="destCity" />
    <result column="dispatch_driver_ids" jdbcType="VARCHAR" property="dispatchDriverIds" />
    <result column="change_driver_reason_id" jdbcType="INTEGER" property="changeDriverReasonId" />
    <result column="before_cancel_status" jdbcType="TINYINT" property="beforeCancelStatus" />
    <result column="app_version" jdbcType="VARCHAR" property="appVersion" />
    <result column="driver_version" jdbcType="VARCHAR" property="driverVersion" />
    <result column="balance_time" jdbcType="INTEGER" property="balanceTime" />
    <result column="balance_result" jdbcType="TINYINT" property="balanceResult" />
    <result column="preauth_status" jdbcType="TINYINT" property="preauthStatus" />
    <result column="extra_amount" jdbcType="DECIMAL" property="extraAmount" />
    <result column="predict_amount" jdbcType="DECIMAL" property="predictAmount" />
    <result column="night_amount" jdbcType="DECIMAL" property="nightAmount" />
    <result column="driver_amount" jdbcType="DECIMAL" property="driverAmount" />
    <result column="predict_origin_amount" jdbcType="DECIMAL" property="predictOriginAmount" />
    <result column="predict_pay_amount" jdbcType="DECIMAL" property="predictPayAmount" />
    <result column="additional_time_amount" jdbcType="DECIMAL" property="additionalTimeAmount" />
    <result column="highway_amount" jdbcType="DECIMAL" property="highwayAmount" />
    <result column="parking_amount" jdbcType="DECIMAL" property="parkingAmount" />
    <result column="addons_amount" jdbcType="DECIMAL" property="addonsAmount" />
    <result column="addons_amount_src" jdbcType="VARCHAR" property="addonsAmountSrc" />
    <result column="other_amount" jdbcType="DECIMAL" property="otherAmount" />
    <result column="runtime" jdbcType="INTEGER" property="runtime" />
    <result column="total_distance" jdbcType="INTEGER" property="totalDistance" />
    <result column="deadhead_distance" jdbcType="INTEGER" property="deadheadDistance" />
    <result column="is_night" jdbcType="TINYINT" property="isNight" />
    <result column="regulatepan_amount" jdbcType="DECIMAL" property="regulatepanAmount" />
    <result column="regulatedri_amount" jdbcType="DECIMAL" property="regulatedriAmount" />
    <result column="regulatepan_reason" jdbcType="VARCHAR" property="regulatepanReason" />
    <result column="regulatedri_reason" jdbcType="VARCHAR" property="regulatedriReason" />
    <result column="regulate_amount" jdbcType="DECIMAL" property="regulateAmount" />
    <result column="estimate_snap" jdbcType="VARCHAR" property="estimateSnap" />
    <result column="ip" jdbcType="VARCHAR" property="ip" />
    <result column="order_port" jdbcType="INTEGER" property="orderPort" />
    <result column="update_time" jdbcType="INTEGER" property="updateTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.yongche.yopsaas.db.domain.YopsaasRideOrderExtWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="app_msg" jdbcType="LONGVARCHAR" property="appMsg" />
    <result column="comment" jdbcType="LONGVARCHAR" property="comment" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    ride_order_id, operator_id, user_type, sms, create_order_longitude, create_order_latitude, 
    confirm_latitude, confirm_longitude, arrive_latitude, arrive_longitude, src_city_name, 
    dst_city_name, dest_city, dispatch_driver_ids, change_driver_reason_id, before_cancel_status, 
    app_version, driver_version, balance_time, balance_result, preauth_status, extra_amount, 
    predict_amount, night_amount, driver_amount, predict_origin_amount, predict_pay_amount, 
    additional_time_amount, highway_amount, parking_amount, addons_amount, addons_amount_src, 
    other_amount, runtime, total_distance, deadhead_distance, is_night, regulatepan_amount, 
    regulatedri_amount, regulatepan_reason, regulatedri_reason, regulate_amount, estimate_snap, 
    ip, order_port, update_time
  </sql>
  <sql id="Blob_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    app_msg, `comment`
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.yongche.yopsaas.db.domain.YopsaasRideOrderExtExample" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from yopsaas_ride_order_ext
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.yongche.yopsaas.db.domain.YopsaasRideOrderExtExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from yopsaas_ride_order_ext
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleSelective" parameterType="map" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="example.distinct">
      distinct
    </if>
    <choose>
      <when test="selective != null and selective.length &gt; 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
        ,
        <include refid="Blob_Column_List" />
      </otherwise>
    </choose>
    from yopsaas_ride_order_ext
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from yopsaas_ride_order_ext
    where ride_order_id = #{rideOrderId,jdbcType=BIGINT}
  </select>
  <select id="selectByPrimaryKeySelective" parameterType="map" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <choose>
      <when test="selective != null and selective.length &gt; 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
        ,
        <include refid="Blob_Column_List" />
      </otherwise>
    </choose>
    from yopsaas_ride_order_ext
    where ride_order_id = #{rideOrderId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from yopsaas_ride_order_ext
    where ride_order_id = #{rideOrderId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.yongche.yopsaas.db.domain.YopsaasRideOrderExtExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from yopsaas_ride_order_ext
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yongche.yopsaas.db.domain.YopsaasRideOrderExtWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="rideOrderId" order="BEFORE" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into yopsaas_ride_order_ext (ride_order_id, operator_id, user_type, 
      sms, create_order_longitude, create_order_latitude, 
      confirm_latitude, confirm_longitude, arrive_latitude, 
      arrive_longitude, src_city_name, dst_city_name, 
      dest_city, dispatch_driver_ids, change_driver_reason_id, 
      before_cancel_status, app_version, driver_version, 
      balance_time, balance_result, preauth_status, 
      extra_amount, predict_amount, night_amount, 
      driver_amount, predict_origin_amount, predict_pay_amount, 
      additional_time_amount, highway_amount, parking_amount, 
      addons_amount, addons_amount_src, other_amount, 
      runtime, total_distance, deadhead_distance, 
      is_night, regulatepan_amount, regulatedri_amount, 
      regulatepan_reason, regulatedri_reason, regulate_amount, 
      estimate_snap, ip, order_port, 
      update_time, app_msg, `comment`
      )
    values (#{rideOrderId,jdbcType=BIGINT}, #{operatorId,jdbcType=INTEGER}, #{userType,jdbcType=TINYINT}, 
      #{sms,jdbcType=INTEGER}, #{createOrderLongitude,jdbcType=DOUBLE}, #{createOrderLatitude,jdbcType=DOUBLE}, 
      #{confirmLatitude,jdbcType=DOUBLE}, #{confirmLongitude,jdbcType=DOUBLE}, #{arriveLatitude,jdbcType=DOUBLE}, 
      #{arriveLongitude,jdbcType=DOUBLE}, #{srcCityName,jdbcType=VARCHAR}, #{dstCityName,jdbcType=VARCHAR}, 
      #{destCity,jdbcType=VARCHAR}, #{dispatchDriverIds,jdbcType=VARCHAR}, #{changeDriverReasonId,jdbcType=INTEGER}, 
      #{beforeCancelStatus,jdbcType=TINYINT}, #{appVersion,jdbcType=VARCHAR}, #{driverVersion,jdbcType=VARCHAR}, 
      #{balanceTime,jdbcType=INTEGER}, #{balanceResult,jdbcType=TINYINT}, #{preauthStatus,jdbcType=TINYINT}, 
      #{extraAmount,jdbcType=DECIMAL}, #{predictAmount,jdbcType=DECIMAL}, #{nightAmount,jdbcType=DECIMAL}, 
      #{driverAmount,jdbcType=DECIMAL}, #{predictOriginAmount,jdbcType=DECIMAL}, #{predictPayAmount,jdbcType=DECIMAL}, 
      #{additionalTimeAmount,jdbcType=DECIMAL}, #{highwayAmount,jdbcType=DECIMAL}, #{parkingAmount,jdbcType=DECIMAL}, 
      #{addonsAmount,jdbcType=DECIMAL}, #{addonsAmountSrc,jdbcType=VARCHAR}, #{otherAmount,jdbcType=DECIMAL}, 
      #{runtime,jdbcType=INTEGER}, #{totalDistance,jdbcType=INTEGER}, #{deadheadDistance,jdbcType=INTEGER}, 
      #{isNight,jdbcType=TINYINT}, #{regulatepanAmount,jdbcType=DECIMAL}, #{regulatedriAmount,jdbcType=DECIMAL}, 
      #{regulatepanReason,jdbcType=VARCHAR}, #{regulatedriReason,jdbcType=VARCHAR}, #{regulateAmount,jdbcType=DECIMAL}, 
      #{estimateSnap,jdbcType=VARCHAR}, #{ip,jdbcType=VARCHAR}, #{orderPort,jdbcType=INTEGER}, 
      #{updateTime,jdbcType=INTEGER}, #{appMsg,jdbcType=LONGVARCHAR}, #{comment,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.yongche.yopsaas.db.domain.YopsaasRideOrderExtWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="rideOrderId" order="BEFORE" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into yopsaas_ride_order_ext
    <trim prefix="(" suffix=")" suffixOverrides=",">
      ride_order_id,
      <if test="operatorId != null">
        operator_id,
      </if>
      <if test="userType != null">
        user_type,
      </if>
      <if test="sms != null">
        sms,
      </if>
      <if test="createOrderLongitude != null">
        create_order_longitude,
      </if>
      <if test="createOrderLatitude != null">
        create_order_latitude,
      </if>
      <if test="confirmLatitude != null">
        confirm_latitude,
      </if>
      <if test="confirmLongitude != null">
        confirm_longitude,
      </if>
      <if test="arriveLatitude != null">
        arrive_latitude,
      </if>
      <if test="arriveLongitude != null">
        arrive_longitude,
      </if>
      <if test="srcCityName != null">
        src_city_name,
      </if>
      <if test="dstCityName != null">
        dst_city_name,
      </if>
      <if test="destCity != null">
        dest_city,
      </if>
      <if test="dispatchDriverIds != null">
        dispatch_driver_ids,
      </if>
      <if test="changeDriverReasonId != null">
        change_driver_reason_id,
      </if>
      <if test="beforeCancelStatus != null">
        before_cancel_status,
      </if>
      <if test="appVersion != null">
        app_version,
      </if>
      <if test="driverVersion != null">
        driver_version,
      </if>
      <if test="balanceTime != null">
        balance_time,
      </if>
      <if test="balanceResult != null">
        balance_result,
      </if>
      <if test="preauthStatus != null">
        preauth_status,
      </if>
      <if test="extraAmount != null">
        extra_amount,
      </if>
      <if test="predictAmount != null">
        predict_amount,
      </if>
      <if test="nightAmount != null">
        night_amount,
      </if>
      <if test="driverAmount != null">
        driver_amount,
      </if>
      <if test="predictOriginAmount != null">
        predict_origin_amount,
      </if>
      <if test="predictPayAmount != null">
        predict_pay_amount,
      </if>
      <if test="additionalTimeAmount != null">
        additional_time_amount,
      </if>
      <if test="highwayAmount != null">
        highway_amount,
      </if>
      <if test="parkingAmount != null">
        parking_amount,
      </if>
      <if test="addonsAmount != null">
        addons_amount,
      </if>
      <if test="addonsAmountSrc != null">
        addons_amount_src,
      </if>
      <if test="otherAmount != null">
        other_amount,
      </if>
      <if test="runtime != null">
        runtime,
      </if>
      <if test="totalDistance != null">
        total_distance,
      </if>
      <if test="deadheadDistance != null">
        deadhead_distance,
      </if>
      <if test="isNight != null">
        is_night,
      </if>
      <if test="regulatepanAmount != null">
        regulatepan_amount,
      </if>
      <if test="regulatedriAmount != null">
        regulatedri_amount,
      </if>
      <if test="regulatepanReason != null">
        regulatepan_reason,
      </if>
      <if test="regulatedriReason != null">
        regulatedri_reason,
      </if>
      <if test="regulateAmount != null">
        regulate_amount,
      </if>
      <if test="estimateSnap != null">
        estimate_snap,
      </if>
      <if test="ip != null">
        ip,
      </if>
      <if test="orderPort != null">
        order_port,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="appMsg != null">
        app_msg,
      </if>
      <if test="comment != null">
        `comment`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{rideOrderId,jdbcType=BIGINT},
      <if test="operatorId != null">
        #{operatorId,jdbcType=INTEGER},
      </if>
      <if test="userType != null">
        #{userType,jdbcType=TINYINT},
      </if>
      <if test="sms != null">
        #{sms,jdbcType=INTEGER},
      </if>
      <if test="createOrderLongitude != null">
        #{createOrderLongitude,jdbcType=DOUBLE},
      </if>
      <if test="createOrderLatitude != null">
        #{createOrderLatitude,jdbcType=DOUBLE},
      </if>
      <if test="confirmLatitude != null">
        #{confirmLatitude,jdbcType=DOUBLE},
      </if>
      <if test="confirmLongitude != null">
        #{confirmLongitude,jdbcType=DOUBLE},
      </if>
      <if test="arriveLatitude != null">
        #{arriveLatitude,jdbcType=DOUBLE},
      </if>
      <if test="arriveLongitude != null">
        #{arriveLongitude,jdbcType=DOUBLE},
      </if>
      <if test="srcCityName != null">
        #{srcCityName,jdbcType=VARCHAR},
      </if>
      <if test="dstCityName != null">
        #{dstCityName,jdbcType=VARCHAR},
      </if>
      <if test="destCity != null">
        #{destCity,jdbcType=VARCHAR},
      </if>
      <if test="dispatchDriverIds != null">
        #{dispatchDriverIds,jdbcType=VARCHAR},
      </if>
      <if test="changeDriverReasonId != null">
        #{changeDriverReasonId,jdbcType=INTEGER},
      </if>
      <if test="beforeCancelStatus != null">
        #{beforeCancelStatus,jdbcType=TINYINT},
      </if>
      <if test="appVersion != null">
        #{appVersion,jdbcType=VARCHAR},
      </if>
      <if test="driverVersion != null">
        #{driverVersion,jdbcType=VARCHAR},
      </if>
      <if test="balanceTime != null">
        #{balanceTime,jdbcType=INTEGER},
      </if>
      <if test="balanceResult != null">
        #{balanceResult,jdbcType=TINYINT},
      </if>
      <if test="preauthStatus != null">
        #{preauthStatus,jdbcType=TINYINT},
      </if>
      <if test="extraAmount != null">
        #{extraAmount,jdbcType=DECIMAL},
      </if>
      <if test="predictAmount != null">
        #{predictAmount,jdbcType=DECIMAL},
      </if>
      <if test="nightAmount != null">
        #{nightAmount,jdbcType=DECIMAL},
      </if>
      <if test="driverAmount != null">
        #{driverAmount,jdbcType=DECIMAL},
      </if>
      <if test="predictOriginAmount != null">
        #{predictOriginAmount,jdbcType=DECIMAL},
      </if>
      <if test="predictPayAmount != null">
        #{predictPayAmount,jdbcType=DECIMAL},
      </if>
      <if test="additionalTimeAmount != null">
        #{additionalTimeAmount,jdbcType=DECIMAL},
      </if>
      <if test="highwayAmount != null">
        #{highwayAmount,jdbcType=DECIMAL},
      </if>
      <if test="parkingAmount != null">
        #{parkingAmount,jdbcType=DECIMAL},
      </if>
      <if test="addonsAmount != null">
        #{addonsAmount,jdbcType=DECIMAL},
      </if>
      <if test="addonsAmountSrc != null">
        #{addonsAmountSrc,jdbcType=VARCHAR},
      </if>
      <if test="otherAmount != null">
        #{otherAmount,jdbcType=DECIMAL},
      </if>
      <if test="runtime != null">
        #{runtime,jdbcType=INTEGER},
      </if>
      <if test="totalDistance != null">
        #{totalDistance,jdbcType=INTEGER},
      </if>
      <if test="deadheadDistance != null">
        #{deadheadDistance,jdbcType=INTEGER},
      </if>
      <if test="isNight != null">
        #{isNight,jdbcType=TINYINT},
      </if>
      <if test="regulatepanAmount != null">
        #{regulatepanAmount,jdbcType=DECIMAL},
      </if>
      <if test="regulatedriAmount != null">
        #{regulatedriAmount,jdbcType=DECIMAL},
      </if>
      <if test="regulatepanReason != null">
        #{regulatepanReason,jdbcType=VARCHAR},
      </if>
      <if test="regulatedriReason != null">
        #{regulatedriReason,jdbcType=VARCHAR},
      </if>
      <if test="regulateAmount != null">
        #{regulateAmount,jdbcType=DECIMAL},
      </if>
      <if test="estimateSnap != null">
        #{estimateSnap,jdbcType=VARCHAR},
      </if>
      <if test="ip != null">
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="orderPort != null">
        #{orderPort,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=INTEGER},
      </if>
      <if test="appMsg != null">
        #{appMsg,jdbcType=LONGVARCHAR},
      </if>
      <if test="comment != null">
        #{comment,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yongche.yopsaas.db.domain.YopsaasRideOrderExtExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from yopsaas_ride_order_ext
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update yopsaas_ride_order_ext
    <set>
      <if test="record.rideOrderId != null">
        ride_order_id = #{record.rideOrderId,jdbcType=BIGINT},
      </if>
      <if test="record.operatorId != null">
        operator_id = #{record.operatorId,jdbcType=INTEGER},
      </if>
      <if test="record.userType != null">
        user_type = #{record.userType,jdbcType=TINYINT},
      </if>
      <if test="record.sms != null">
        sms = #{record.sms,jdbcType=INTEGER},
      </if>
      <if test="record.createOrderLongitude != null">
        create_order_longitude = #{record.createOrderLongitude,jdbcType=DOUBLE},
      </if>
      <if test="record.createOrderLatitude != null">
        create_order_latitude = #{record.createOrderLatitude,jdbcType=DOUBLE},
      </if>
      <if test="record.confirmLatitude != null">
        confirm_latitude = #{record.confirmLatitude,jdbcType=DOUBLE},
      </if>
      <if test="record.confirmLongitude != null">
        confirm_longitude = #{record.confirmLongitude,jdbcType=DOUBLE},
      </if>
      <if test="record.arriveLatitude != null">
        arrive_latitude = #{record.arriveLatitude,jdbcType=DOUBLE},
      </if>
      <if test="record.arriveLongitude != null">
        arrive_longitude = #{record.arriveLongitude,jdbcType=DOUBLE},
      </if>
      <if test="record.srcCityName != null">
        src_city_name = #{record.srcCityName,jdbcType=VARCHAR},
      </if>
      <if test="record.dstCityName != null">
        dst_city_name = #{record.dstCityName,jdbcType=VARCHAR},
      </if>
      <if test="record.destCity != null">
        dest_city = #{record.destCity,jdbcType=VARCHAR},
      </if>
      <if test="record.dispatchDriverIds != null">
        dispatch_driver_ids = #{record.dispatchDriverIds,jdbcType=VARCHAR},
      </if>
      <if test="record.changeDriverReasonId != null">
        change_driver_reason_id = #{record.changeDriverReasonId,jdbcType=INTEGER},
      </if>
      <if test="record.beforeCancelStatus != null">
        before_cancel_status = #{record.beforeCancelStatus,jdbcType=TINYINT},
      </if>
      <if test="record.appVersion != null">
        app_version = #{record.appVersion,jdbcType=VARCHAR},
      </if>
      <if test="record.driverVersion != null">
        driver_version = #{record.driverVersion,jdbcType=VARCHAR},
      </if>
      <if test="record.balanceTime != null">
        balance_time = #{record.balanceTime,jdbcType=INTEGER},
      </if>
      <if test="record.balanceResult != null">
        balance_result = #{record.balanceResult,jdbcType=TINYINT},
      </if>
      <if test="record.preauthStatus != null">
        preauth_status = #{record.preauthStatus,jdbcType=TINYINT},
      </if>
      <if test="record.extraAmount != null">
        extra_amount = #{record.extraAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.predictAmount != null">
        predict_amount = #{record.predictAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.nightAmount != null">
        night_amount = #{record.nightAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.driverAmount != null">
        driver_amount = #{record.driverAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.predictOriginAmount != null">
        predict_origin_amount = #{record.predictOriginAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.predictPayAmount != null">
        predict_pay_amount = #{record.predictPayAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.additionalTimeAmount != null">
        additional_time_amount = #{record.additionalTimeAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.highwayAmount != null">
        highway_amount = #{record.highwayAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.parkingAmount != null">
        parking_amount = #{record.parkingAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.addonsAmount != null">
        addons_amount = #{record.addonsAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.addonsAmountSrc != null">
        addons_amount_src = #{record.addonsAmountSrc,jdbcType=VARCHAR},
      </if>
      <if test="record.otherAmount != null">
        other_amount = #{record.otherAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.runtime != null">
        runtime = #{record.runtime,jdbcType=INTEGER},
      </if>
      <if test="record.totalDistance != null">
        total_distance = #{record.totalDistance,jdbcType=INTEGER},
      </if>
      <if test="record.deadheadDistance != null">
        deadhead_distance = #{record.deadheadDistance,jdbcType=INTEGER},
      </if>
      <if test="record.isNight != null">
        is_night = #{record.isNight,jdbcType=TINYINT},
      </if>
      <if test="record.regulatepanAmount != null">
        regulatepan_amount = #{record.regulatepanAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.regulatedriAmount != null">
        regulatedri_amount = #{record.regulatedriAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.regulatepanReason != null">
        regulatepan_reason = #{record.regulatepanReason,jdbcType=VARCHAR},
      </if>
      <if test="record.regulatedriReason != null">
        regulatedri_reason = #{record.regulatedriReason,jdbcType=VARCHAR},
      </if>
      <if test="record.regulateAmount != null">
        regulate_amount = #{record.regulateAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.estimateSnap != null">
        estimate_snap = #{record.estimateSnap,jdbcType=VARCHAR},
      </if>
      <if test="record.ip != null">
        ip = #{record.ip,jdbcType=VARCHAR},
      </if>
      <if test="record.orderPort != null">
        order_port = #{record.orderPort,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=INTEGER},
      </if>
      <if test="record.appMsg != null">
        app_msg = #{record.appMsg,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.comment != null">
        `comment` = #{record.comment,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update yopsaas_ride_order_ext
    set ride_order_id = #{record.rideOrderId,jdbcType=BIGINT},
      operator_id = #{record.operatorId,jdbcType=INTEGER},
      user_type = #{record.userType,jdbcType=TINYINT},
      sms = #{record.sms,jdbcType=INTEGER},
      create_order_longitude = #{record.createOrderLongitude,jdbcType=DOUBLE},
      create_order_latitude = #{record.createOrderLatitude,jdbcType=DOUBLE},
      confirm_latitude = #{record.confirmLatitude,jdbcType=DOUBLE},
      confirm_longitude = #{record.confirmLongitude,jdbcType=DOUBLE},
      arrive_latitude = #{record.arriveLatitude,jdbcType=DOUBLE},
      arrive_longitude = #{record.arriveLongitude,jdbcType=DOUBLE},
      src_city_name = #{record.srcCityName,jdbcType=VARCHAR},
      dst_city_name = #{record.dstCityName,jdbcType=VARCHAR},
      dest_city = #{record.destCity,jdbcType=VARCHAR},
      dispatch_driver_ids = #{record.dispatchDriverIds,jdbcType=VARCHAR},
      change_driver_reason_id = #{record.changeDriverReasonId,jdbcType=INTEGER},
      before_cancel_status = #{record.beforeCancelStatus,jdbcType=TINYINT},
      app_version = #{record.appVersion,jdbcType=VARCHAR},
      driver_version = #{record.driverVersion,jdbcType=VARCHAR},
      balance_time = #{record.balanceTime,jdbcType=INTEGER},
      balance_result = #{record.balanceResult,jdbcType=TINYINT},
      preauth_status = #{record.preauthStatus,jdbcType=TINYINT},
      extra_amount = #{record.extraAmount,jdbcType=DECIMAL},
      predict_amount = #{record.predictAmount,jdbcType=DECIMAL},
      night_amount = #{record.nightAmount,jdbcType=DECIMAL},
      driver_amount = #{record.driverAmount,jdbcType=DECIMAL},
      predict_origin_amount = #{record.predictOriginAmount,jdbcType=DECIMAL},
      predict_pay_amount = #{record.predictPayAmount,jdbcType=DECIMAL},
      additional_time_amount = #{record.additionalTimeAmount,jdbcType=DECIMAL},
      highway_amount = #{record.highwayAmount,jdbcType=DECIMAL},
      parking_amount = #{record.parkingAmount,jdbcType=DECIMAL},
      addons_amount = #{record.addonsAmount,jdbcType=DECIMAL},
      addons_amount_src = #{record.addonsAmountSrc,jdbcType=VARCHAR},
      other_amount = #{record.otherAmount,jdbcType=DECIMAL},
      runtime = #{record.runtime,jdbcType=INTEGER},
      total_distance = #{record.totalDistance,jdbcType=INTEGER},
      deadhead_distance = #{record.deadheadDistance,jdbcType=INTEGER},
      is_night = #{record.isNight,jdbcType=TINYINT},
      regulatepan_amount = #{record.regulatepanAmount,jdbcType=DECIMAL},
      regulatedri_amount = #{record.regulatedriAmount,jdbcType=DECIMAL},
      regulatepan_reason = #{record.regulatepanReason,jdbcType=VARCHAR},
      regulatedri_reason = #{record.regulatedriReason,jdbcType=VARCHAR},
      regulate_amount = #{record.regulateAmount,jdbcType=DECIMAL},
      estimate_snap = #{record.estimateSnap,jdbcType=VARCHAR},
      ip = #{record.ip,jdbcType=VARCHAR},
      order_port = #{record.orderPort,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=INTEGER},
      app_msg = #{record.appMsg,jdbcType=LONGVARCHAR},
      `comment` = #{record.comment,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update yopsaas_ride_order_ext
    set ride_order_id = #{record.rideOrderId,jdbcType=BIGINT},
      operator_id = #{record.operatorId,jdbcType=INTEGER},
      user_type = #{record.userType,jdbcType=TINYINT},
      sms = #{record.sms,jdbcType=INTEGER},
      create_order_longitude = #{record.createOrderLongitude,jdbcType=DOUBLE},
      create_order_latitude = #{record.createOrderLatitude,jdbcType=DOUBLE},
      confirm_latitude = #{record.confirmLatitude,jdbcType=DOUBLE},
      confirm_longitude = #{record.confirmLongitude,jdbcType=DOUBLE},
      arrive_latitude = #{record.arriveLatitude,jdbcType=DOUBLE},
      arrive_longitude = #{record.arriveLongitude,jdbcType=DOUBLE},
      src_city_name = #{record.srcCityName,jdbcType=VARCHAR},
      dst_city_name = #{record.dstCityName,jdbcType=VARCHAR},
      dest_city = #{record.destCity,jdbcType=VARCHAR},
      dispatch_driver_ids = #{record.dispatchDriverIds,jdbcType=VARCHAR},
      change_driver_reason_id = #{record.changeDriverReasonId,jdbcType=INTEGER},
      before_cancel_status = #{record.beforeCancelStatus,jdbcType=TINYINT},
      app_version = #{record.appVersion,jdbcType=VARCHAR},
      driver_version = #{record.driverVersion,jdbcType=VARCHAR},
      balance_time = #{record.balanceTime,jdbcType=INTEGER},
      balance_result = #{record.balanceResult,jdbcType=TINYINT},
      preauth_status = #{record.preauthStatus,jdbcType=TINYINT},
      extra_amount = #{record.extraAmount,jdbcType=DECIMAL},
      predict_amount = #{record.predictAmount,jdbcType=DECIMAL},
      night_amount = #{record.nightAmount,jdbcType=DECIMAL},
      driver_amount = #{record.driverAmount,jdbcType=DECIMAL},
      predict_origin_amount = #{record.predictOriginAmount,jdbcType=DECIMAL},
      predict_pay_amount = #{record.predictPayAmount,jdbcType=DECIMAL},
      additional_time_amount = #{record.additionalTimeAmount,jdbcType=DECIMAL},
      highway_amount = #{record.highwayAmount,jdbcType=DECIMAL},
      parking_amount = #{record.parkingAmount,jdbcType=DECIMAL},
      addons_amount = #{record.addonsAmount,jdbcType=DECIMAL},
      addons_amount_src = #{record.addonsAmountSrc,jdbcType=VARCHAR},
      other_amount = #{record.otherAmount,jdbcType=DECIMAL},
      runtime = #{record.runtime,jdbcType=INTEGER},
      total_distance = #{record.totalDistance,jdbcType=INTEGER},
      deadhead_distance = #{record.deadheadDistance,jdbcType=INTEGER},
      is_night = #{record.isNight,jdbcType=TINYINT},
      regulatepan_amount = #{record.regulatepanAmount,jdbcType=DECIMAL},
      regulatedri_amount = #{record.regulatedriAmount,jdbcType=DECIMAL},
      regulatepan_reason = #{record.regulatepanReason,jdbcType=VARCHAR},
      regulatedri_reason = #{record.regulatedriReason,jdbcType=VARCHAR},
      regulate_amount = #{record.regulateAmount,jdbcType=DECIMAL},
      estimate_snap = #{record.estimateSnap,jdbcType=VARCHAR},
      ip = #{record.ip,jdbcType=VARCHAR},
      order_port = #{record.orderPort,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yongche.yopsaas.db.domain.YopsaasRideOrderExtWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update yopsaas_ride_order_ext
    <set>
      <if test="operatorId != null">
        operator_id = #{operatorId,jdbcType=INTEGER},
      </if>
      <if test="userType != null">
        user_type = #{userType,jdbcType=TINYINT},
      </if>
      <if test="sms != null">
        sms = #{sms,jdbcType=INTEGER},
      </if>
      <if test="createOrderLongitude != null">
        create_order_longitude = #{createOrderLongitude,jdbcType=DOUBLE},
      </if>
      <if test="createOrderLatitude != null">
        create_order_latitude = #{createOrderLatitude,jdbcType=DOUBLE},
      </if>
      <if test="confirmLatitude != null">
        confirm_latitude = #{confirmLatitude,jdbcType=DOUBLE},
      </if>
      <if test="confirmLongitude != null">
        confirm_longitude = #{confirmLongitude,jdbcType=DOUBLE},
      </if>
      <if test="arriveLatitude != null">
        arrive_latitude = #{arriveLatitude,jdbcType=DOUBLE},
      </if>
      <if test="arriveLongitude != null">
        arrive_longitude = #{arriveLongitude,jdbcType=DOUBLE},
      </if>
      <if test="srcCityName != null">
        src_city_name = #{srcCityName,jdbcType=VARCHAR},
      </if>
      <if test="dstCityName != null">
        dst_city_name = #{dstCityName,jdbcType=VARCHAR},
      </if>
      <if test="destCity != null">
        dest_city = #{destCity,jdbcType=VARCHAR},
      </if>
      <if test="dispatchDriverIds != null">
        dispatch_driver_ids = #{dispatchDriverIds,jdbcType=VARCHAR},
      </if>
      <if test="changeDriverReasonId != null">
        change_driver_reason_id = #{changeDriverReasonId,jdbcType=INTEGER},
      </if>
      <if test="beforeCancelStatus != null">
        before_cancel_status = #{beforeCancelStatus,jdbcType=TINYINT},
      </if>
      <if test="appVersion != null">
        app_version = #{appVersion,jdbcType=VARCHAR},
      </if>
      <if test="driverVersion != null">
        driver_version = #{driverVersion,jdbcType=VARCHAR},
      </if>
      <if test="balanceTime != null">
        balance_time = #{balanceTime,jdbcType=INTEGER},
      </if>
      <if test="balanceResult != null">
        balance_result = #{balanceResult,jdbcType=TINYINT},
      </if>
      <if test="preauthStatus != null">
        preauth_status = #{preauthStatus,jdbcType=TINYINT},
      </if>
      <if test="extraAmount != null">
        extra_amount = #{extraAmount,jdbcType=DECIMAL},
      </if>
      <if test="predictAmount != null">
        predict_amount = #{predictAmount,jdbcType=DECIMAL},
      </if>
      <if test="nightAmount != null">
        night_amount = #{nightAmount,jdbcType=DECIMAL},
      </if>
      <if test="driverAmount != null">
        driver_amount = #{driverAmount,jdbcType=DECIMAL},
      </if>
      <if test="predictOriginAmount != null">
        predict_origin_amount = #{predictOriginAmount,jdbcType=DECIMAL},
      </if>
      <if test="predictPayAmount != null">
        predict_pay_amount = #{predictPayAmount,jdbcType=DECIMAL},
      </if>
      <if test="additionalTimeAmount != null">
        additional_time_amount = #{additionalTimeAmount,jdbcType=DECIMAL},
      </if>
      <if test="highwayAmount != null">
        highway_amount = #{highwayAmount,jdbcType=DECIMAL},
      </if>
      <if test="parkingAmount != null">
        parking_amount = #{parkingAmount,jdbcType=DECIMAL},
      </if>
      <if test="addonsAmount != null">
        addons_amount = #{addonsAmount,jdbcType=DECIMAL},
      </if>
      <if test="addonsAmountSrc != null">
        addons_amount_src = #{addonsAmountSrc,jdbcType=VARCHAR},
      </if>
      <if test="otherAmount != null">
        other_amount = #{otherAmount,jdbcType=DECIMAL},
      </if>
      <if test="runtime != null">
        runtime = #{runtime,jdbcType=INTEGER},
      </if>
      <if test="totalDistance != null">
        total_distance = #{totalDistance,jdbcType=INTEGER},
      </if>
      <if test="deadheadDistance != null">
        deadhead_distance = #{deadheadDistance,jdbcType=INTEGER},
      </if>
      <if test="isNight != null">
        is_night = #{isNight,jdbcType=TINYINT},
      </if>
      <if test="regulatepanAmount != null">
        regulatepan_amount = #{regulatepanAmount,jdbcType=DECIMAL},
      </if>
      <if test="regulatedriAmount != null">
        regulatedri_amount = #{regulatedriAmount,jdbcType=DECIMAL},
      </if>
      <if test="regulatepanReason != null">
        regulatepan_reason = #{regulatepanReason,jdbcType=VARCHAR},
      </if>
      <if test="regulatedriReason != null">
        regulatedri_reason = #{regulatedriReason,jdbcType=VARCHAR},
      </if>
      <if test="regulateAmount != null">
        regulate_amount = #{regulateAmount,jdbcType=DECIMAL},
      </if>
      <if test="estimateSnap != null">
        estimate_snap = #{estimateSnap,jdbcType=VARCHAR},
      </if>
      <if test="ip != null">
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="orderPort != null">
        order_port = #{orderPort,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=INTEGER},
      </if>
      <if test="appMsg != null">
        app_msg = #{appMsg,jdbcType=LONGVARCHAR},
      </if>
      <if test="comment != null">
        `comment` = #{comment,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where ride_order_id = #{rideOrderId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.yongche.yopsaas.db.domain.YopsaasRideOrderExtWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update yopsaas_ride_order_ext
    set operator_id = #{operatorId,jdbcType=INTEGER},
      user_type = #{userType,jdbcType=TINYINT},
      sms = #{sms,jdbcType=INTEGER},
      create_order_longitude = #{createOrderLongitude,jdbcType=DOUBLE},
      create_order_latitude = #{createOrderLatitude,jdbcType=DOUBLE},
      confirm_latitude = #{confirmLatitude,jdbcType=DOUBLE},
      confirm_longitude = #{confirmLongitude,jdbcType=DOUBLE},
      arrive_latitude = #{arriveLatitude,jdbcType=DOUBLE},
      arrive_longitude = #{arriveLongitude,jdbcType=DOUBLE},
      src_city_name = #{srcCityName,jdbcType=VARCHAR},
      dst_city_name = #{dstCityName,jdbcType=VARCHAR},
      dest_city = #{destCity,jdbcType=VARCHAR},
      dispatch_driver_ids = #{dispatchDriverIds,jdbcType=VARCHAR},
      change_driver_reason_id = #{changeDriverReasonId,jdbcType=INTEGER},
      before_cancel_status = #{beforeCancelStatus,jdbcType=TINYINT},
      app_version = #{appVersion,jdbcType=VARCHAR},
      driver_version = #{driverVersion,jdbcType=VARCHAR},
      balance_time = #{balanceTime,jdbcType=INTEGER},
      balance_result = #{balanceResult,jdbcType=TINYINT},
      preauth_status = #{preauthStatus,jdbcType=TINYINT},
      extra_amount = #{extraAmount,jdbcType=DECIMAL},
      predict_amount = #{predictAmount,jdbcType=DECIMAL},
      night_amount = #{nightAmount,jdbcType=DECIMAL},
      driver_amount = #{driverAmount,jdbcType=DECIMAL},
      predict_origin_amount = #{predictOriginAmount,jdbcType=DECIMAL},
      predict_pay_amount = #{predictPayAmount,jdbcType=DECIMAL},
      additional_time_amount = #{additionalTimeAmount,jdbcType=DECIMAL},
      highway_amount = #{highwayAmount,jdbcType=DECIMAL},
      parking_amount = #{parkingAmount,jdbcType=DECIMAL},
      addons_amount = #{addonsAmount,jdbcType=DECIMAL},
      addons_amount_src = #{addonsAmountSrc,jdbcType=VARCHAR},
      other_amount = #{otherAmount,jdbcType=DECIMAL},
      runtime = #{runtime,jdbcType=INTEGER},
      total_distance = #{totalDistance,jdbcType=INTEGER},
      deadhead_distance = #{deadheadDistance,jdbcType=INTEGER},
      is_night = #{isNight,jdbcType=TINYINT},
      regulatepan_amount = #{regulatepanAmount,jdbcType=DECIMAL},
      regulatedri_amount = #{regulatedriAmount,jdbcType=DECIMAL},
      regulatepan_reason = #{regulatepanReason,jdbcType=VARCHAR},
      regulatedri_reason = #{regulatedriReason,jdbcType=VARCHAR},
      regulate_amount = #{regulateAmount,jdbcType=DECIMAL},
      estimate_snap = #{estimateSnap,jdbcType=VARCHAR},
      ip = #{ip,jdbcType=VARCHAR},
      order_port = #{orderPort,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=INTEGER},
      app_msg = #{appMsg,jdbcType=LONGVARCHAR},
      `comment` = #{comment,jdbcType=LONGVARCHAR}
    where ride_order_id = #{rideOrderId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yongche.yopsaas.db.domain.YopsaasRideOrderExt">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update yopsaas_ride_order_ext
    set operator_id = #{operatorId,jdbcType=INTEGER},
      user_type = #{userType,jdbcType=TINYINT},
      sms = #{sms,jdbcType=INTEGER},
      create_order_longitude = #{createOrderLongitude,jdbcType=DOUBLE},
      create_order_latitude = #{createOrderLatitude,jdbcType=DOUBLE},
      confirm_latitude = #{confirmLatitude,jdbcType=DOUBLE},
      confirm_longitude = #{confirmLongitude,jdbcType=DOUBLE},
      arrive_latitude = #{arriveLatitude,jdbcType=DOUBLE},
      arrive_longitude = #{arriveLongitude,jdbcType=DOUBLE},
      src_city_name = #{srcCityName,jdbcType=VARCHAR},
      dst_city_name = #{dstCityName,jdbcType=VARCHAR},
      dest_city = #{destCity,jdbcType=VARCHAR},
      dispatch_driver_ids = #{dispatchDriverIds,jdbcType=VARCHAR},
      change_driver_reason_id = #{changeDriverReasonId,jdbcType=INTEGER},
      before_cancel_status = #{beforeCancelStatus,jdbcType=TINYINT},
      app_version = #{appVersion,jdbcType=VARCHAR},
      driver_version = #{driverVersion,jdbcType=VARCHAR},
      balance_time = #{balanceTime,jdbcType=INTEGER},
      balance_result = #{balanceResult,jdbcType=TINYINT},
      preauth_status = #{preauthStatus,jdbcType=TINYINT},
      extra_amount = #{extraAmount,jdbcType=DECIMAL},
      predict_amount = #{predictAmount,jdbcType=DECIMAL},
      night_amount = #{nightAmount,jdbcType=DECIMAL},
      driver_amount = #{driverAmount,jdbcType=DECIMAL},
      predict_origin_amount = #{predictOriginAmount,jdbcType=DECIMAL},
      predict_pay_amount = #{predictPayAmount,jdbcType=DECIMAL},
      additional_time_amount = #{additionalTimeAmount,jdbcType=DECIMAL},
      highway_amount = #{highwayAmount,jdbcType=DECIMAL},
      parking_amount = #{parkingAmount,jdbcType=DECIMAL},
      addons_amount = #{addonsAmount,jdbcType=DECIMAL},
      addons_amount_src = #{addonsAmountSrc,jdbcType=VARCHAR},
      other_amount = #{otherAmount,jdbcType=DECIMAL},
      runtime = #{runtime,jdbcType=INTEGER},
      total_distance = #{totalDistance,jdbcType=INTEGER},
      deadhead_distance = #{deadheadDistance,jdbcType=INTEGER},
      is_night = #{isNight,jdbcType=TINYINT},
      regulatepan_amount = #{regulatepanAmount,jdbcType=DECIMAL},
      regulatedri_amount = #{regulatedriAmount,jdbcType=DECIMAL},
      regulatepan_reason = #{regulatepanReason,jdbcType=VARCHAR},
      regulatedri_reason = #{regulatedriReason,jdbcType=VARCHAR},
      regulate_amount = #{regulateAmount,jdbcType=DECIMAL},
      estimate_snap = #{estimateSnap,jdbcType=VARCHAR},
      ip = #{ip,jdbcType=VARCHAR},
      order_port = #{orderPort,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=INTEGER}
    where ride_order_id = #{rideOrderId,jdbcType=BIGINT}
  </update>
  <select id="selectOneByExample" parameterType="com.yongche.yopsaas.db.domain.YopsaasRideOrderExtExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <include refid="Base_Column_List" />
    from yopsaas_ride_order_ext
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <select id="selectOneByExampleWithBLOBs" parameterType="com.yongche.yopsaas.db.domain.YopsaasRideOrderExtExample" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from yopsaas_ride_order_ext
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <select id="selectOneByExampleSelective" parameterType="map" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <choose>
      <when test="selective != null and selective.length &gt; 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
        ,
        <include refid="Blob_Column_List" />
      </otherwise>
    </choose>
    from yopsaas_ride_order_ext
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    limit 1
  </select>
</mapper>