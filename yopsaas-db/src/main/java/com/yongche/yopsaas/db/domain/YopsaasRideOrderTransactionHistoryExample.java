package com.yongche.yopsaas.db.domain;

import java.util.ArrayList;
import java.util.List;

public class YopsaasRideOrderTransactionHistoryExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table yopsaas_ride_order_transaction_history
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table yopsaas_ride_order_transaction_history
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table yopsaas_ride_order_transaction_history
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table yopsaas_ride_order_transaction_history
     *
     * @mbg.generated
     */
    public YopsaasRideOrderTransactionHistoryExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table yopsaas_ride_order_transaction_history
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table yopsaas_ride_order_transaction_history
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table yopsaas_ride_order_transaction_history
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table yopsaas_ride_order_transaction_history
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table yopsaas_ride_order_transaction_history
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table yopsaas_ride_order_transaction_history
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table yopsaas_ride_order_transaction_history
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table yopsaas_ride_order_transaction_history
     *
     * @mbg.generated
     */
    public YopsaasRideOrderTransactionHistoryExample orderBy(String orderByClause) {
        this.setOrderByClause(orderByClause);
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table yopsaas_ride_order_transaction_history
     *
     * @mbg.generated
     */
    public YopsaasRideOrderTransactionHistoryExample orderBy(String ... orderByClauses) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < orderByClauses.length; i++) {
            sb.append(orderByClauses[i]);
            if (i < orderByClauses.length - 1) {
                sb.append(" , ");
            }
        }
        this.setOrderByClause(sb.toString());
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table yopsaas_ride_order_transaction_history
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table yopsaas_ride_order_transaction_history
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria(this);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table yopsaas_ride_order_transaction_history
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table yopsaas_ride_order_transaction_history
     *
     * @mbg.generated
     */
    public static Criteria newAndCreateCriteria() {
        YopsaasRideOrderTransactionHistoryExample example = new YopsaasRideOrderTransactionHistoryExample();
        return example.createCriteria();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table yopsaas_ride_order_transaction_history
     *
     * @mbg.generated
     */
    public YopsaasRideOrderTransactionHistoryExample when(boolean condition, IExampleWhen then) {
        if (condition) {
            then.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table yopsaas_ride_order_transaction_history
     *
     * @mbg.generated
     */
    public YopsaasRideOrderTransactionHistoryExample when(boolean condition, IExampleWhen then, IExampleWhen otherwise) {
        if (condition) {
            then.example(this);
        } else {
            otherwise.example(this);
        }
        return this;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table yopsaas_ride_order_transaction_history
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andRideOrderTransactionHistoryIdIsNull() {
            addCriterion("ride_order_transaction_history_id is null");
            return (Criteria) this;
        }

        public Criteria andRideOrderTransactionHistoryIdIsNotNull() {
            addCriterion("ride_order_transaction_history_id is not null");
            return (Criteria) this;
        }

        public Criteria andRideOrderTransactionHistoryIdEqualTo(Long value) {
            addCriterion("ride_order_transaction_history_id =", value, "rideOrderTransactionHistoryId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        public Criteria andRideOrderTransactionHistoryIdEqualToColumn(YopsaasRideOrderTransactionHistory.Column column) {
            addCriterion(new StringBuilder("ride_order_transaction_history_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRideOrderTransactionHistoryIdNotEqualTo(Long value) {
            addCriterion("ride_order_transaction_history_id <>", value, "rideOrderTransactionHistoryId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        public Criteria andRideOrderTransactionHistoryIdNotEqualToColumn(YopsaasRideOrderTransactionHistory.Column column) {
            addCriterion(new StringBuilder("ride_order_transaction_history_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRideOrderTransactionHistoryIdGreaterThan(Long value) {
            addCriterion("ride_order_transaction_history_id >", value, "rideOrderTransactionHistoryId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        public Criteria andRideOrderTransactionHistoryIdGreaterThanColumn(YopsaasRideOrderTransactionHistory.Column column) {
            addCriterion(new StringBuilder("ride_order_transaction_history_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRideOrderTransactionHistoryIdGreaterThanOrEqualTo(Long value) {
            addCriterion("ride_order_transaction_history_id >=", value, "rideOrderTransactionHistoryId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        public Criteria andRideOrderTransactionHistoryIdGreaterThanOrEqualToColumn(YopsaasRideOrderTransactionHistory.Column column) {
            addCriterion(new StringBuilder("ride_order_transaction_history_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRideOrderTransactionHistoryIdLessThan(Long value) {
            addCriterion("ride_order_transaction_history_id <", value, "rideOrderTransactionHistoryId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        public Criteria andRideOrderTransactionHistoryIdLessThanColumn(YopsaasRideOrderTransactionHistory.Column column) {
            addCriterion(new StringBuilder("ride_order_transaction_history_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRideOrderTransactionHistoryIdLessThanOrEqualTo(Long value) {
            addCriterion("ride_order_transaction_history_id <=", value, "rideOrderTransactionHistoryId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        public Criteria andRideOrderTransactionHistoryIdLessThanOrEqualToColumn(YopsaasRideOrderTransactionHistory.Column column) {
            addCriterion(new StringBuilder("ride_order_transaction_history_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRideOrderTransactionHistoryIdIn(List<Long> values) {
            addCriterion("ride_order_transaction_history_id in", values, "rideOrderTransactionHistoryId");
            return (Criteria) this;
        }

        public Criteria andRideOrderTransactionHistoryIdNotIn(List<Long> values) {
            addCriterion("ride_order_transaction_history_id not in", values, "rideOrderTransactionHistoryId");
            return (Criteria) this;
        }

        public Criteria andRideOrderTransactionHistoryIdBetween(Long value1, Long value2) {
            addCriterion("ride_order_transaction_history_id between", value1, value2, "rideOrderTransactionHistoryId");
            return (Criteria) this;
        }

        public Criteria andRideOrderTransactionHistoryIdNotBetween(Long value1, Long value2) {
            addCriterion("ride_order_transaction_history_id not between", value1, value2, "rideOrderTransactionHistoryId");
            return (Criteria) this;
        }

        public Criteria andAccountIdIsNull() {
            addCriterion("account_id is null");
            return (Criteria) this;
        }

        public Criteria andAccountIdIsNotNull() {
            addCriterion("account_id is not null");
            return (Criteria) this;
        }

        public Criteria andAccountIdEqualTo(Long value) {
            addCriterion("account_id =", value, "accountId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        public Criteria andAccountIdEqualToColumn(YopsaasRideOrderTransactionHistory.Column column) {
            addCriterion(new StringBuilder("account_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAccountIdNotEqualTo(Long value) {
            addCriterion("account_id <>", value, "accountId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        public Criteria andAccountIdNotEqualToColumn(YopsaasRideOrderTransactionHistory.Column column) {
            addCriterion(new StringBuilder("account_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAccountIdGreaterThan(Long value) {
            addCriterion("account_id >", value, "accountId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        public Criteria andAccountIdGreaterThanColumn(YopsaasRideOrderTransactionHistory.Column column) {
            addCriterion(new StringBuilder("account_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAccountIdGreaterThanOrEqualTo(Long value) {
            addCriterion("account_id >=", value, "accountId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        public Criteria andAccountIdGreaterThanOrEqualToColumn(YopsaasRideOrderTransactionHistory.Column column) {
            addCriterion(new StringBuilder("account_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAccountIdLessThan(Long value) {
            addCriterion("account_id <", value, "accountId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        public Criteria andAccountIdLessThanColumn(YopsaasRideOrderTransactionHistory.Column column) {
            addCriterion(new StringBuilder("account_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAccountIdLessThanOrEqualTo(Long value) {
            addCriterion("account_id <=", value, "accountId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        public Criteria andAccountIdLessThanOrEqualToColumn(YopsaasRideOrderTransactionHistory.Column column) {
            addCriterion(new StringBuilder("account_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAccountIdIn(List<Long> values) {
            addCriterion("account_id in", values, "accountId");
            return (Criteria) this;
        }

        public Criteria andAccountIdNotIn(List<Long> values) {
            addCriterion("account_id not in", values, "accountId");
            return (Criteria) this;
        }

        public Criteria andAccountIdBetween(Long value1, Long value2) {
            addCriterion("account_id between", value1, value2, "accountId");
            return (Criteria) this;
        }

        public Criteria andAccountIdNotBetween(Long value1, Long value2) {
            addCriterion("account_id not between", value1, value2, "accountId");
            return (Criteria) this;
        }

        public Criteria andRideOrderIdIsNull() {
            addCriterion("ride_order_id is null");
            return (Criteria) this;
        }

        public Criteria andRideOrderIdIsNotNull() {
            addCriterion("ride_order_id is not null");
            return (Criteria) this;
        }

        public Criteria andRideOrderIdEqualTo(Long value) {
            addCriterion("ride_order_id =", value, "rideOrderId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        public Criteria andRideOrderIdEqualToColumn(YopsaasRideOrderTransactionHistory.Column column) {
            addCriterion(new StringBuilder("ride_order_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRideOrderIdNotEqualTo(Long value) {
            addCriterion("ride_order_id <>", value, "rideOrderId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        public Criteria andRideOrderIdNotEqualToColumn(YopsaasRideOrderTransactionHistory.Column column) {
            addCriterion(new StringBuilder("ride_order_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRideOrderIdGreaterThan(Long value) {
            addCriterion("ride_order_id >", value, "rideOrderId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        public Criteria andRideOrderIdGreaterThanColumn(YopsaasRideOrderTransactionHistory.Column column) {
            addCriterion(new StringBuilder("ride_order_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRideOrderIdGreaterThanOrEqualTo(Long value) {
            addCriterion("ride_order_id >=", value, "rideOrderId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        public Criteria andRideOrderIdGreaterThanOrEqualToColumn(YopsaasRideOrderTransactionHistory.Column column) {
            addCriterion(new StringBuilder("ride_order_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRideOrderIdLessThan(Long value) {
            addCriterion("ride_order_id <", value, "rideOrderId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        public Criteria andRideOrderIdLessThanColumn(YopsaasRideOrderTransactionHistory.Column column) {
            addCriterion(new StringBuilder("ride_order_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRideOrderIdLessThanOrEqualTo(Long value) {
            addCriterion("ride_order_id <=", value, "rideOrderId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        public Criteria andRideOrderIdLessThanOrEqualToColumn(YopsaasRideOrderTransactionHistory.Column column) {
            addCriterion(new StringBuilder("ride_order_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRideOrderIdIn(List<Long> values) {
            addCriterion("ride_order_id in", values, "rideOrderId");
            return (Criteria) this;
        }

        public Criteria andRideOrderIdNotIn(List<Long> values) {
            addCriterion("ride_order_id not in", values, "rideOrderId");
            return (Criteria) this;
        }

        public Criteria andRideOrderIdBetween(Long value1, Long value2) {
            addCriterion("ride_order_id between", value1, value2, "rideOrderId");
            return (Criteria) this;
        }

        public Criteria andRideOrderIdNotBetween(Long value1, Long value2) {
            addCriterion("ride_order_id not between", value1, value2, "rideOrderId");
            return (Criteria) this;
        }

        public Criteria andRechargeTransactionIdIsNull() {
            addCriterion("recharge_transaction_id is null");
            return (Criteria) this;
        }

        public Criteria andRechargeTransactionIdIsNotNull() {
            addCriterion("recharge_transaction_id is not null");
            return (Criteria) this;
        }

        public Criteria andRechargeTransactionIdEqualTo(Long value) {
            addCriterion("recharge_transaction_id =", value, "rechargeTransactionId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        public Criteria andRechargeTransactionIdEqualToColumn(YopsaasRideOrderTransactionHistory.Column column) {
            addCriterion(new StringBuilder("recharge_transaction_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRechargeTransactionIdNotEqualTo(Long value) {
            addCriterion("recharge_transaction_id <>", value, "rechargeTransactionId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        public Criteria andRechargeTransactionIdNotEqualToColumn(YopsaasRideOrderTransactionHistory.Column column) {
            addCriterion(new StringBuilder("recharge_transaction_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRechargeTransactionIdGreaterThan(Long value) {
            addCriterion("recharge_transaction_id >", value, "rechargeTransactionId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        public Criteria andRechargeTransactionIdGreaterThanColumn(YopsaasRideOrderTransactionHistory.Column column) {
            addCriterion(new StringBuilder("recharge_transaction_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRechargeTransactionIdGreaterThanOrEqualTo(Long value) {
            addCriterion("recharge_transaction_id >=", value, "rechargeTransactionId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        public Criteria andRechargeTransactionIdGreaterThanOrEqualToColumn(YopsaasRideOrderTransactionHistory.Column column) {
            addCriterion(new StringBuilder("recharge_transaction_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRechargeTransactionIdLessThan(Long value) {
            addCriterion("recharge_transaction_id <", value, "rechargeTransactionId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        public Criteria andRechargeTransactionIdLessThanColumn(YopsaasRideOrderTransactionHistory.Column column) {
            addCriterion(new StringBuilder("recharge_transaction_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRechargeTransactionIdLessThanOrEqualTo(Long value) {
            addCriterion("recharge_transaction_id <=", value, "rechargeTransactionId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        public Criteria andRechargeTransactionIdLessThanOrEqualToColumn(YopsaasRideOrderTransactionHistory.Column column) {
            addCriterion(new StringBuilder("recharge_transaction_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRechargeTransactionIdIn(List<Long> values) {
            addCriterion("recharge_transaction_id in", values, "rechargeTransactionId");
            return (Criteria) this;
        }

        public Criteria andRechargeTransactionIdNotIn(List<Long> values) {
            addCriterion("recharge_transaction_id not in", values, "rechargeTransactionId");
            return (Criteria) this;
        }

        public Criteria andRechargeTransactionIdBetween(Long value1, Long value2) {
            addCriterion("recharge_transaction_id between", value1, value2, "rechargeTransactionId");
            return (Criteria) this;
        }

        public Criteria andRechargeTransactionIdNotBetween(Long value1, Long value2) {
            addCriterion("recharge_transaction_id not between", value1, value2, "rechargeTransactionId");
            return (Criteria) this;
        }

        public Criteria andConsumerIdIsNull() {
            addCriterion("consumer_id is null");
            return (Criteria) this;
        }

        public Criteria andConsumerIdIsNotNull() {
            addCriterion("consumer_id is not null");
            return (Criteria) this;
        }

        public Criteria andConsumerIdEqualTo(Long value) {
            addCriterion("consumer_id =", value, "consumerId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        public Criteria andConsumerIdEqualToColumn(YopsaasRideOrderTransactionHistory.Column column) {
            addCriterion(new StringBuilder("consumer_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andConsumerIdNotEqualTo(Long value) {
            addCriterion("consumer_id <>", value, "consumerId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        public Criteria andConsumerIdNotEqualToColumn(YopsaasRideOrderTransactionHistory.Column column) {
            addCriterion(new StringBuilder("consumer_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andConsumerIdGreaterThan(Long value) {
            addCriterion("consumer_id >", value, "consumerId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        public Criteria andConsumerIdGreaterThanColumn(YopsaasRideOrderTransactionHistory.Column column) {
            addCriterion(new StringBuilder("consumer_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andConsumerIdGreaterThanOrEqualTo(Long value) {
            addCriterion("consumer_id >=", value, "consumerId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        public Criteria andConsumerIdGreaterThanOrEqualToColumn(YopsaasRideOrderTransactionHistory.Column column) {
            addCriterion(new StringBuilder("consumer_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andConsumerIdLessThan(Long value) {
            addCriterion("consumer_id <", value, "consumerId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        public Criteria andConsumerIdLessThanColumn(YopsaasRideOrderTransactionHistory.Column column) {
            addCriterion(new StringBuilder("consumer_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andConsumerIdLessThanOrEqualTo(Long value) {
            addCriterion("consumer_id <=", value, "consumerId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        public Criteria andConsumerIdLessThanOrEqualToColumn(YopsaasRideOrderTransactionHistory.Column column) {
            addCriterion(new StringBuilder("consumer_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andConsumerIdIn(List<Long> values) {
            addCriterion("consumer_id in", values, "consumerId");
            return (Criteria) this;
        }

        public Criteria andConsumerIdNotIn(List<Long> values) {
            addCriterion("consumer_id not in", values, "consumerId");
            return (Criteria) this;
        }

        public Criteria andConsumerIdBetween(Long value1, Long value2) {
            addCriterion("consumer_id between", value1, value2, "consumerId");
            return (Criteria) this;
        }

        public Criteria andConsumerIdNotBetween(Long value1, Long value2) {
            addCriterion("consumer_id not between", value1, value2, "consumerId");
            return (Criteria) this;
        }

        public Criteria andOperationIsNull() {
            addCriterion("`operation` is null");
            return (Criteria) this;
        }

        public Criteria andOperationIsNotNull() {
            addCriterion("`operation` is not null");
            return (Criteria) this;
        }

        public Criteria andOperationEqualTo(Byte value) {
            addCriterion("`operation` =", value, "operation");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        public Criteria andOperationEqualToColumn(YopsaasRideOrderTransactionHistory.Column column) {
            addCriterion(new StringBuilder("`operation` = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOperationNotEqualTo(Byte value) {
            addCriterion("`operation` <>", value, "operation");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        public Criteria andOperationNotEqualToColumn(YopsaasRideOrderTransactionHistory.Column column) {
            addCriterion(new StringBuilder("`operation` <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOperationGreaterThan(Byte value) {
            addCriterion("`operation` >", value, "operation");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        public Criteria andOperationGreaterThanColumn(YopsaasRideOrderTransactionHistory.Column column) {
            addCriterion(new StringBuilder("`operation` > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOperationGreaterThanOrEqualTo(Byte value) {
            addCriterion("`operation` >=", value, "operation");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        public Criteria andOperationGreaterThanOrEqualToColumn(YopsaasRideOrderTransactionHistory.Column column) {
            addCriterion(new StringBuilder("`operation` >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOperationLessThan(Byte value) {
            addCriterion("`operation` <", value, "operation");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        public Criteria andOperationLessThanColumn(YopsaasRideOrderTransactionHistory.Column column) {
            addCriterion(new StringBuilder("`operation` < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOperationLessThanOrEqualTo(Byte value) {
            addCriterion("`operation` <=", value, "operation");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        public Criteria andOperationLessThanOrEqualToColumn(YopsaasRideOrderTransactionHistory.Column column) {
            addCriterion(new StringBuilder("`operation` <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOperationIn(List<Byte> values) {
            addCriterion("`operation` in", values, "operation");
            return (Criteria) this;
        }

        public Criteria andOperationNotIn(List<Byte> values) {
            addCriterion("`operation` not in", values, "operation");
            return (Criteria) this;
        }

        public Criteria andOperationBetween(Byte value1, Byte value2) {
            addCriterion("`operation` between", value1, value2, "operation");
            return (Criteria) this;
        }

        public Criteria andOperationNotBetween(Byte value1, Byte value2) {
            addCriterion("`operation` not between", value1, value2, "operation");
            return (Criteria) this;
        }

        public Criteria andPayTypeIsNull() {
            addCriterion("pay_type is null");
            return (Criteria) this;
        }

        public Criteria andPayTypeIsNotNull() {
            addCriterion("pay_type is not null");
            return (Criteria) this;
        }

        public Criteria andPayTypeEqualTo(Byte value) {
            addCriterion("pay_type =", value, "payType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        public Criteria andPayTypeEqualToColumn(YopsaasRideOrderTransactionHistory.Column column) {
            addCriterion(new StringBuilder("pay_type = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPayTypeNotEqualTo(Byte value) {
            addCriterion("pay_type <>", value, "payType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        public Criteria andPayTypeNotEqualToColumn(YopsaasRideOrderTransactionHistory.Column column) {
            addCriterion(new StringBuilder("pay_type <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPayTypeGreaterThan(Byte value) {
            addCriterion("pay_type >", value, "payType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        public Criteria andPayTypeGreaterThanColumn(YopsaasRideOrderTransactionHistory.Column column) {
            addCriterion(new StringBuilder("pay_type > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPayTypeGreaterThanOrEqualTo(Byte value) {
            addCriterion("pay_type >=", value, "payType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        public Criteria andPayTypeGreaterThanOrEqualToColumn(YopsaasRideOrderTransactionHistory.Column column) {
            addCriterion(new StringBuilder("pay_type >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPayTypeLessThan(Byte value) {
            addCriterion("pay_type <", value, "payType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        public Criteria andPayTypeLessThanColumn(YopsaasRideOrderTransactionHistory.Column column) {
            addCriterion(new StringBuilder("pay_type < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPayTypeLessThanOrEqualTo(Byte value) {
            addCriterion("pay_type <=", value, "payType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        public Criteria andPayTypeLessThanOrEqualToColumn(YopsaasRideOrderTransactionHistory.Column column) {
            addCriterion(new StringBuilder("pay_type <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPayTypeIn(List<Byte> values) {
            addCriterion("pay_type in", values, "payType");
            return (Criteria) this;
        }

        public Criteria andPayTypeNotIn(List<Byte> values) {
            addCriterion("pay_type not in", values, "payType");
            return (Criteria) this;
        }

        public Criteria andPayTypeBetween(Byte value1, Byte value2) {
            addCriterion("pay_type between", value1, value2, "payType");
            return (Criteria) this;
        }

        public Criteria andPayTypeNotBetween(Byte value1, Byte value2) {
            addCriterion("pay_type not between", value1, value2, "payType");
            return (Criteria) this;
        }

        public Criteria andPaySourceIsNull() {
            addCriterion("pay_source is null");
            return (Criteria) this;
        }

        public Criteria andPaySourceIsNotNull() {
            addCriterion("pay_source is not null");
            return (Criteria) this;
        }

        public Criteria andPaySourceEqualTo(Short value) {
            addCriterion("pay_source =", value, "paySource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        public Criteria andPaySourceEqualToColumn(YopsaasRideOrderTransactionHistory.Column column) {
            addCriterion(new StringBuilder("pay_source = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPaySourceNotEqualTo(Short value) {
            addCriterion("pay_source <>", value, "paySource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        public Criteria andPaySourceNotEqualToColumn(YopsaasRideOrderTransactionHistory.Column column) {
            addCriterion(new StringBuilder("pay_source <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPaySourceGreaterThan(Short value) {
            addCriterion("pay_source >", value, "paySource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        public Criteria andPaySourceGreaterThanColumn(YopsaasRideOrderTransactionHistory.Column column) {
            addCriterion(new StringBuilder("pay_source > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPaySourceGreaterThanOrEqualTo(Short value) {
            addCriterion("pay_source >=", value, "paySource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        public Criteria andPaySourceGreaterThanOrEqualToColumn(YopsaasRideOrderTransactionHistory.Column column) {
            addCriterion(new StringBuilder("pay_source >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPaySourceLessThan(Short value) {
            addCriterion("pay_source <", value, "paySource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        public Criteria andPaySourceLessThanColumn(YopsaasRideOrderTransactionHistory.Column column) {
            addCriterion(new StringBuilder("pay_source < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPaySourceLessThanOrEqualTo(Short value) {
            addCriterion("pay_source <=", value, "paySource");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        public Criteria andPaySourceLessThanOrEqualToColumn(YopsaasRideOrderTransactionHistory.Column column) {
            addCriterion(new StringBuilder("pay_source <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPaySourceIn(List<Short> values) {
            addCriterion("pay_source in", values, "paySource");
            return (Criteria) this;
        }

        public Criteria andPaySourceNotIn(List<Short> values) {
            addCriterion("pay_source not in", values, "paySource");
            return (Criteria) this;
        }

        public Criteria andPaySourceBetween(Short value1, Short value2) {
            addCriterion("pay_source between", value1, value2, "paySource");
            return (Criteria) this;
        }

        public Criteria andPaySourceNotBetween(Short value1, Short value2) {
            addCriterion("pay_source not between", value1, value2, "paySource");
            return (Criteria) this;
        }

        public Criteria andTransactionTypeIsNull() {
            addCriterion("transaction_type is null");
            return (Criteria) this;
        }

        public Criteria andTransactionTypeIsNotNull() {
            addCriterion("transaction_type is not null");
            return (Criteria) this;
        }

        public Criteria andTransactionTypeEqualTo(Byte value) {
            addCriterion("transaction_type =", value, "transactionType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        public Criteria andTransactionTypeEqualToColumn(YopsaasRideOrderTransactionHistory.Column column) {
            addCriterion(new StringBuilder("transaction_type = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTransactionTypeNotEqualTo(Byte value) {
            addCriterion("transaction_type <>", value, "transactionType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        public Criteria andTransactionTypeNotEqualToColumn(YopsaasRideOrderTransactionHistory.Column column) {
            addCriterion(new StringBuilder("transaction_type <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTransactionTypeGreaterThan(Byte value) {
            addCriterion("transaction_type >", value, "transactionType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        public Criteria andTransactionTypeGreaterThanColumn(YopsaasRideOrderTransactionHistory.Column column) {
            addCriterion(new StringBuilder("transaction_type > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTransactionTypeGreaterThanOrEqualTo(Byte value) {
            addCriterion("transaction_type >=", value, "transactionType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        public Criteria andTransactionTypeGreaterThanOrEqualToColumn(YopsaasRideOrderTransactionHistory.Column column) {
            addCriterion(new StringBuilder("transaction_type >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTransactionTypeLessThan(Byte value) {
            addCriterion("transaction_type <", value, "transactionType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        public Criteria andTransactionTypeLessThanColumn(YopsaasRideOrderTransactionHistory.Column column) {
            addCriterion(new StringBuilder("transaction_type < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTransactionTypeLessThanOrEqualTo(Byte value) {
            addCriterion("transaction_type <=", value, "transactionType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        public Criteria andTransactionTypeLessThanOrEqualToColumn(YopsaasRideOrderTransactionHistory.Column column) {
            addCriterion(new StringBuilder("transaction_type <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTransactionTypeIn(List<Byte> values) {
            addCriterion("transaction_type in", values, "transactionType");
            return (Criteria) this;
        }

        public Criteria andTransactionTypeNotIn(List<Byte> values) {
            addCriterion("transaction_type not in", values, "transactionType");
            return (Criteria) this;
        }

        public Criteria andTransactionTypeBetween(Byte value1, Byte value2) {
            addCriterion("transaction_type between", value1, value2, "transactionType");
            return (Criteria) this;
        }

        public Criteria andTransactionTypeNotBetween(Byte value1, Byte value2) {
            addCriterion("transaction_type not between", value1, value2, "transactionType");
            return (Criteria) this;
        }

        public Criteria andStatusIsNull() {
            addCriterion("`status` is null");
            return (Criteria) this;
        }

        public Criteria andStatusIsNotNull() {
            addCriterion("`status` is not null");
            return (Criteria) this;
        }

        public Criteria andStatusEqualTo(Byte value) {
            addCriterion("`status` =", value, "status");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        public Criteria andStatusEqualToColumn(YopsaasRideOrderTransactionHistory.Column column) {
            addCriterion(new StringBuilder("`status` = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStatusNotEqualTo(Byte value) {
            addCriterion("`status` <>", value, "status");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        public Criteria andStatusNotEqualToColumn(YopsaasRideOrderTransactionHistory.Column column) {
            addCriterion(new StringBuilder("`status` <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThan(Byte value) {
            addCriterion("`status` >", value, "status");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        public Criteria andStatusGreaterThanColumn(YopsaasRideOrderTransactionHistory.Column column) {
            addCriterion(new StringBuilder("`status` > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThanOrEqualTo(Byte value) {
            addCriterion("`status` >=", value, "status");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        public Criteria andStatusGreaterThanOrEqualToColumn(YopsaasRideOrderTransactionHistory.Column column) {
            addCriterion(new StringBuilder("`status` >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStatusLessThan(Byte value) {
            addCriterion("`status` <", value, "status");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        public Criteria andStatusLessThanColumn(YopsaasRideOrderTransactionHistory.Column column) {
            addCriterion(new StringBuilder("`status` < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStatusLessThanOrEqualTo(Byte value) {
            addCriterion("`status` <=", value, "status");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        public Criteria andStatusLessThanOrEqualToColumn(YopsaasRideOrderTransactionHistory.Column column) {
            addCriterion(new StringBuilder("`status` <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStatusIn(List<Byte> values) {
            addCriterion("`status` in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotIn(List<Byte> values) {
            addCriterion("`status` not in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusBetween(Byte value1, Byte value2) {
            addCriterion("`status` between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotBetween(Byte value1, Byte value2) {
            addCriterion("`status` not between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andAmountIsNull() {
            addCriterion("amount is null");
            return (Criteria) this;
        }

        public Criteria andAmountIsNotNull() {
            addCriterion("amount is not null");
            return (Criteria) this;
        }

        public Criteria andAmountEqualTo(Integer value) {
            addCriterion("amount =", value, "amount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        public Criteria andAmountEqualToColumn(YopsaasRideOrderTransactionHistory.Column column) {
            addCriterion(new StringBuilder("amount = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAmountNotEqualTo(Integer value) {
            addCriterion("amount <>", value, "amount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        public Criteria andAmountNotEqualToColumn(YopsaasRideOrderTransactionHistory.Column column) {
            addCriterion(new StringBuilder("amount <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAmountGreaterThan(Integer value) {
            addCriterion("amount >", value, "amount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        public Criteria andAmountGreaterThanColumn(YopsaasRideOrderTransactionHistory.Column column) {
            addCriterion(new StringBuilder("amount > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAmountGreaterThanOrEqualTo(Integer value) {
            addCriterion("amount >=", value, "amount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        public Criteria andAmountGreaterThanOrEqualToColumn(YopsaasRideOrderTransactionHistory.Column column) {
            addCriterion(new StringBuilder("amount >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAmountLessThan(Integer value) {
            addCriterion("amount <", value, "amount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        public Criteria andAmountLessThanColumn(YopsaasRideOrderTransactionHistory.Column column) {
            addCriterion(new StringBuilder("amount < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAmountLessThanOrEqualTo(Integer value) {
            addCriterion("amount <=", value, "amount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        public Criteria andAmountLessThanOrEqualToColumn(YopsaasRideOrderTransactionHistory.Column column) {
            addCriterion(new StringBuilder("amount <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAmountIn(List<Integer> values) {
            addCriterion("amount in", values, "amount");
            return (Criteria) this;
        }

        public Criteria andAmountNotIn(List<Integer> values) {
            addCriterion("amount not in", values, "amount");
            return (Criteria) this;
        }

        public Criteria andAmountBetween(Integer value1, Integer value2) {
            addCriterion("amount between", value1, value2, "amount");
            return (Criteria) this;
        }

        public Criteria andAmountNotBetween(Integer value1, Integer value2) {
            addCriterion("amount not between", value1, value2, "amount");
            return (Criteria) this;
        }

        public Criteria andPaidAmountIsNull() {
            addCriterion("paid_amount is null");
            return (Criteria) this;
        }

        public Criteria andPaidAmountIsNotNull() {
            addCriterion("paid_amount is not null");
            return (Criteria) this;
        }

        public Criteria andPaidAmountEqualTo(Integer value) {
            addCriterion("paid_amount =", value, "paidAmount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        public Criteria andPaidAmountEqualToColumn(YopsaasRideOrderTransactionHistory.Column column) {
            addCriterion(new StringBuilder("paid_amount = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPaidAmountNotEqualTo(Integer value) {
            addCriterion("paid_amount <>", value, "paidAmount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        public Criteria andPaidAmountNotEqualToColumn(YopsaasRideOrderTransactionHistory.Column column) {
            addCriterion(new StringBuilder("paid_amount <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPaidAmountGreaterThan(Integer value) {
            addCriterion("paid_amount >", value, "paidAmount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        public Criteria andPaidAmountGreaterThanColumn(YopsaasRideOrderTransactionHistory.Column column) {
            addCriterion(new StringBuilder("paid_amount > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPaidAmountGreaterThanOrEqualTo(Integer value) {
            addCriterion("paid_amount >=", value, "paidAmount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        public Criteria andPaidAmountGreaterThanOrEqualToColumn(YopsaasRideOrderTransactionHistory.Column column) {
            addCriterion(new StringBuilder("paid_amount >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPaidAmountLessThan(Integer value) {
            addCriterion("paid_amount <", value, "paidAmount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        public Criteria andPaidAmountLessThanColumn(YopsaasRideOrderTransactionHistory.Column column) {
            addCriterion(new StringBuilder("paid_amount < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPaidAmountLessThanOrEqualTo(Integer value) {
            addCriterion("paid_amount <=", value, "paidAmount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        public Criteria andPaidAmountLessThanOrEqualToColumn(YopsaasRideOrderTransactionHistory.Column column) {
            addCriterion(new StringBuilder("paid_amount <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPaidAmountIn(List<Integer> values) {
            addCriterion("paid_amount in", values, "paidAmount");
            return (Criteria) this;
        }

        public Criteria andPaidAmountNotIn(List<Integer> values) {
            addCriterion("paid_amount not in", values, "paidAmount");
            return (Criteria) this;
        }

        public Criteria andPaidAmountBetween(Integer value1, Integer value2) {
            addCriterion("paid_amount between", value1, value2, "paidAmount");
            return (Criteria) this;
        }

        public Criteria andPaidAmountNotBetween(Integer value1, Integer value2) {
            addCriterion("paid_amount not between", value1, value2, "paidAmount");
            return (Criteria) this;
        }

        public Criteria andOperatorIsNull() {
            addCriterion("`operator` is null");
            return (Criteria) this;
        }

        public Criteria andOperatorIsNotNull() {
            addCriterion("`operator` is not null");
            return (Criteria) this;
        }

        public Criteria andOperatorEqualTo(String value) {
            addCriterion("`operator` =", value, "operator");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        public Criteria andOperatorEqualToColumn(YopsaasRideOrderTransactionHistory.Column column) {
            addCriterion(new StringBuilder("`operator` = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOperatorNotEqualTo(String value) {
            addCriterion("`operator` <>", value, "operator");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        public Criteria andOperatorNotEqualToColumn(YopsaasRideOrderTransactionHistory.Column column) {
            addCriterion(new StringBuilder("`operator` <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOperatorGreaterThan(String value) {
            addCriterion("`operator` >", value, "operator");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        public Criteria andOperatorGreaterThanColumn(YopsaasRideOrderTransactionHistory.Column column) {
            addCriterion(new StringBuilder("`operator` > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOperatorGreaterThanOrEqualTo(String value) {
            addCriterion("`operator` >=", value, "operator");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        public Criteria andOperatorGreaterThanOrEqualToColumn(YopsaasRideOrderTransactionHistory.Column column) {
            addCriterion(new StringBuilder("`operator` >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOperatorLessThan(String value) {
            addCriterion("`operator` <", value, "operator");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        public Criteria andOperatorLessThanColumn(YopsaasRideOrderTransactionHistory.Column column) {
            addCriterion(new StringBuilder("`operator` < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOperatorLessThanOrEqualTo(String value) {
            addCriterion("`operator` <=", value, "operator");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        public Criteria andOperatorLessThanOrEqualToColumn(YopsaasRideOrderTransactionHistory.Column column) {
            addCriterion(new StringBuilder("`operator` <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOperatorLike(String value) {
            addCriterion("`operator` like", value, "operator");
            return (Criteria) this;
        }

        public Criteria andOperatorNotLike(String value) {
            addCriterion("`operator` not like", value, "operator");
            return (Criteria) this;
        }

        public Criteria andOperatorIn(List<String> values) {
            addCriterion("`operator` in", values, "operator");
            return (Criteria) this;
        }

        public Criteria andOperatorNotIn(List<String> values) {
            addCriterion("`operator` not in", values, "operator");
            return (Criteria) this;
        }

        public Criteria andOperatorBetween(String value1, String value2) {
            addCriterion("`operator` between", value1, value2, "operator");
            return (Criteria) this;
        }

        public Criteria andOperatorNotBetween(String value1, String value2) {
            addCriterion("`operator` not between", value1, value2, "operator");
            return (Criteria) this;
        }

        public Criteria andCommentIsNull() {
            addCriterion("`comment` is null");
            return (Criteria) this;
        }

        public Criteria andCommentIsNotNull() {
            addCriterion("`comment` is not null");
            return (Criteria) this;
        }

        public Criteria andCommentEqualTo(String value) {
            addCriterion("`comment` =", value, "comment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        public Criteria andCommentEqualToColumn(YopsaasRideOrderTransactionHistory.Column column) {
            addCriterion(new StringBuilder("`comment` = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCommentNotEqualTo(String value) {
            addCriterion("`comment` <>", value, "comment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        public Criteria andCommentNotEqualToColumn(YopsaasRideOrderTransactionHistory.Column column) {
            addCriterion(new StringBuilder("`comment` <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCommentGreaterThan(String value) {
            addCriterion("`comment` >", value, "comment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        public Criteria andCommentGreaterThanColumn(YopsaasRideOrderTransactionHistory.Column column) {
            addCriterion(new StringBuilder("`comment` > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCommentGreaterThanOrEqualTo(String value) {
            addCriterion("`comment` >=", value, "comment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        public Criteria andCommentGreaterThanOrEqualToColumn(YopsaasRideOrderTransactionHistory.Column column) {
            addCriterion(new StringBuilder("`comment` >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCommentLessThan(String value) {
            addCriterion("`comment` <", value, "comment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        public Criteria andCommentLessThanColumn(YopsaasRideOrderTransactionHistory.Column column) {
            addCriterion(new StringBuilder("`comment` < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCommentLessThanOrEqualTo(String value) {
            addCriterion("`comment` <=", value, "comment");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        public Criteria andCommentLessThanOrEqualToColumn(YopsaasRideOrderTransactionHistory.Column column) {
            addCriterion(new StringBuilder("`comment` <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCommentLike(String value) {
            addCriterion("`comment` like", value, "comment");
            return (Criteria) this;
        }

        public Criteria andCommentNotLike(String value) {
            addCriterion("`comment` not like", value, "comment");
            return (Criteria) this;
        }

        public Criteria andCommentIn(List<String> values) {
            addCriterion("`comment` in", values, "comment");
            return (Criteria) this;
        }

        public Criteria andCommentNotIn(List<String> values) {
            addCriterion("`comment` not in", values, "comment");
            return (Criteria) this;
        }

        public Criteria andCommentBetween(String value1, String value2) {
            addCriterion("`comment` between", value1, value2, "comment");
            return (Criteria) this;
        }

        public Criteria andCommentNotBetween(String value1, String value2) {
            addCriterion("`comment` not between", value1, value2, "comment");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("create_time is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("create_time is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(Integer value) {
            addCriterion("create_time =", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeEqualToColumn(YopsaasRideOrderTransactionHistory.Column column) {
            addCriterion(new StringBuilder("create_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(Integer value) {
            addCriterion("create_time <>", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeNotEqualToColumn(YopsaasRideOrderTransactionHistory.Column column) {
            addCriterion(new StringBuilder("create_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(Integer value) {
            addCriterion("create_time >", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeGreaterThanColumn(YopsaasRideOrderTransactionHistory.Column column) {
            addCriterion(new StringBuilder("create_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(Integer value) {
            addCriterion("create_time >=", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeGreaterThanOrEqualToColumn(YopsaasRideOrderTransactionHistory.Column column) {
            addCriterion(new StringBuilder("create_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(Integer value) {
            addCriterion("create_time <", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeLessThanColumn(YopsaasRideOrderTransactionHistory.Column column) {
            addCriterion(new StringBuilder("create_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(Integer value) {
            addCriterion("create_time <=", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeLessThanOrEqualToColumn(YopsaasRideOrderTransactionHistory.Column column) {
            addCriterion(new StringBuilder("create_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<Integer> values) {
            addCriterion("create_time in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<Integer> values) {
            addCriterion("create_time not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(Integer value1, Integer value2) {
            addCriterion("create_time between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(Integer value1, Integer value2) {
            addCriterion("create_time not between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNull() {
            addCriterion("update_time is null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNotNull() {
            addCriterion("update_time is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeEqualTo(Integer value) {
            addCriterion("update_time =", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeEqualToColumn(YopsaasRideOrderTransactionHistory.Column column) {
            addCriterion(new StringBuilder("update_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotEqualTo(Integer value) {
            addCriterion("update_time <>", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeNotEqualToColumn(YopsaasRideOrderTransactionHistory.Column column) {
            addCriterion(new StringBuilder("update_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThan(Integer value) {
            addCriterion("update_time >", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeGreaterThanColumn(YopsaasRideOrderTransactionHistory.Column column) {
            addCriterion(new StringBuilder("update_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThanOrEqualTo(Integer value) {
            addCriterion("update_time >=", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeGreaterThanOrEqualToColumn(YopsaasRideOrderTransactionHistory.Column column) {
            addCriterion(new StringBuilder("update_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThan(Integer value) {
            addCriterion("update_time <", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeLessThanColumn(YopsaasRideOrderTransactionHistory.Column column) {
            addCriterion(new StringBuilder("update_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThanOrEqualTo(Integer value) {
            addCriterion("update_time <=", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeLessThanOrEqualToColumn(YopsaasRideOrderTransactionHistory.Column column) {
            addCriterion(new StringBuilder("update_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIn(List<Integer> values) {
            addCriterion("update_time in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotIn(List<Integer> values) {
            addCriterion("update_time not in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeBetween(Integer value1, Integer value2) {
            addCriterion("update_time between", value1, value2, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotBetween(Integer value1, Integer value2) {
            addCriterion("update_time not between", value1, value2, "updateTime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table yopsaas_ride_order_transaction_history
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        /**
         * This field was generated by MyBatis Generator.
         * This field corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        private YopsaasRideOrderTransactionHistoryExample example;

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        protected Criteria(YopsaasRideOrderTransactionHistoryExample example) {
            super();
            this.example = example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        public YopsaasRideOrderTransactionHistoryExample example() {
            return this.example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        @Deprecated
        public Criteria andIf(boolean ifAdd, ICriteriaAdd add) {
            if (ifAdd) {
                add.add(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then) {
            if (condition) {
                then.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then, ICriteriaWhen otherwise) {
            if (condition) {
                then.criteria(this);
            } else {
                otherwise.criteria(this);
            }
            return this;
        }

        @Deprecated
        public interface ICriteriaAdd {
            /**
             * This method was generated by MyBatis Generator.
             * This method corresponds to the database table yopsaas_ride_order_transaction_history
             *
             * @mbg.generated
             */
            Criteria add(Criteria add);
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table yopsaas_ride_order_transaction_history
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    public interface ICriteriaWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        void criteria(Criteria criteria);
    }

    public interface IExampleWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_order_transaction_history
         *
         * @mbg.generated
         */
        void example(com.yongche.yopsaas.db.domain.YopsaasRideOrderTransactionHistoryExample example);
    }
}