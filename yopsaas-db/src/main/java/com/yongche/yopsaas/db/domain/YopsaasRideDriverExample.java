package com.yongche.yopsaas.db.domain;

import java.util.ArrayList;
import java.util.List;

public class YopsaasRideDriverExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table yopsaas_ride_driver
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table yopsaas_ride_driver
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table yopsaas_ride_driver
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table yopsaas_ride_driver
     *
     * @mbg.generated
     */
    public YopsaasRideDriverExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table yopsaas_ride_driver
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table yopsaas_ride_driver
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table yopsaas_ride_driver
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table yopsaas_ride_driver
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table yopsaas_ride_driver
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table yopsaas_ride_driver
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table yopsaas_ride_driver
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table yopsaas_ride_driver
     *
     * @mbg.generated
     */
    public YopsaasRideDriverExample orderBy(String orderByClause) {
        this.setOrderByClause(orderByClause);
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table yopsaas_ride_driver
     *
     * @mbg.generated
     */
    public YopsaasRideDriverExample orderBy(String ... orderByClauses) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < orderByClauses.length; i++) {
            sb.append(orderByClauses[i]);
            if (i < orderByClauses.length - 1) {
                sb.append(" , ");
            }
        }
        this.setOrderByClause(sb.toString());
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table yopsaas_ride_driver
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table yopsaas_ride_driver
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria(this);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table yopsaas_ride_driver
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table yopsaas_ride_driver
     *
     * @mbg.generated
     */
    public static Criteria newAndCreateCriteria() {
        YopsaasRideDriverExample example = new YopsaasRideDriverExample();
        return example.createCriteria();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table yopsaas_ride_driver
     *
     * @mbg.generated
     */
    public YopsaasRideDriverExample when(boolean condition, IExampleWhen then) {
        if (condition) {
            then.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table yopsaas_ride_driver
     *
     * @mbg.generated
     */
    public YopsaasRideDriverExample when(boolean condition, IExampleWhen then, IExampleWhen otherwise) {
        if (condition) {
            then.example(this);
        } else {
            otherwise.example(this);
        }
        return this;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table yopsaas_ride_driver
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andRideDriverIdIsNull() {
            addCriterion("ride_driver_id is null");
            return (Criteria) this;
        }

        public Criteria andRideDriverIdIsNotNull() {
            addCriterion("ride_driver_id is not null");
            return (Criteria) this;
        }

        public Criteria andRideDriverIdEqualTo(Long value) {
            addCriterion("ride_driver_id =", value, "rideDriverId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andRideDriverIdEqualToColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("ride_driver_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRideDriverIdNotEqualTo(Long value) {
            addCriterion("ride_driver_id <>", value, "rideDriverId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andRideDriverIdNotEqualToColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("ride_driver_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRideDriverIdGreaterThan(Long value) {
            addCriterion("ride_driver_id >", value, "rideDriverId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andRideDriverIdGreaterThanColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("ride_driver_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRideDriverIdGreaterThanOrEqualTo(Long value) {
            addCriterion("ride_driver_id >=", value, "rideDriverId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andRideDriverIdGreaterThanOrEqualToColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("ride_driver_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRideDriverIdLessThan(Long value) {
            addCriterion("ride_driver_id <", value, "rideDriverId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andRideDriverIdLessThanColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("ride_driver_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRideDriverIdLessThanOrEqualTo(Long value) {
            addCriterion("ride_driver_id <=", value, "rideDriverId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andRideDriverIdLessThanOrEqualToColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("ride_driver_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRideDriverIdIn(List<Long> values) {
            addCriterion("ride_driver_id in", values, "rideDriverId");
            return (Criteria) this;
        }

        public Criteria andRideDriverIdNotIn(List<Long> values) {
            addCriterion("ride_driver_id not in", values, "rideDriverId");
            return (Criteria) this;
        }

        public Criteria andRideDriverIdBetween(Long value1, Long value2) {
            addCriterion("ride_driver_id between", value1, value2, "rideDriverId");
            return (Criteria) this;
        }

        public Criteria andRideDriverIdNotBetween(Long value1, Long value2) {
            addCriterion("ride_driver_id not between", value1, value2, "rideDriverId");
            return (Criteria) this;
        }

        public Criteria andYcDriverIdIsNull() {
            addCriterion("yc_driver_id is null");
            return (Criteria) this;
        }

        public Criteria andYcDriverIdIsNotNull() {
            addCriterion("yc_driver_id is not null");
            return (Criteria) this;
        }

        public Criteria andYcDriverIdEqualTo(Integer value) {
            addCriterion("yc_driver_id =", value, "ycDriverId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andYcDriverIdEqualToColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("yc_driver_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andYcDriverIdNotEqualTo(Integer value) {
            addCriterion("yc_driver_id <>", value, "ycDriverId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andYcDriverIdNotEqualToColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("yc_driver_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andYcDriverIdGreaterThan(Integer value) {
            addCriterion("yc_driver_id >", value, "ycDriverId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andYcDriverIdGreaterThanColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("yc_driver_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andYcDriverIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("yc_driver_id >=", value, "ycDriverId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andYcDriverIdGreaterThanOrEqualToColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("yc_driver_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andYcDriverIdLessThan(Integer value) {
            addCriterion("yc_driver_id <", value, "ycDriverId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andYcDriverIdLessThanColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("yc_driver_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andYcDriverIdLessThanOrEqualTo(Integer value) {
            addCriterion("yc_driver_id <=", value, "ycDriverId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andYcDriverIdLessThanOrEqualToColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("yc_driver_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andYcDriverIdIn(List<Integer> values) {
            addCriterion("yc_driver_id in", values, "ycDriverId");
            return (Criteria) this;
        }

        public Criteria andYcDriverIdNotIn(List<Integer> values) {
            addCriterion("yc_driver_id not in", values, "ycDriverId");
            return (Criteria) this;
        }

        public Criteria andYcDriverIdBetween(Integer value1, Integer value2) {
            addCriterion("yc_driver_id between", value1, value2, "ycDriverId");
            return (Criteria) this;
        }

        public Criteria andYcDriverIdNotBetween(Integer value1, Integer value2) {
            addCriterion("yc_driver_id not between", value1, value2, "ycDriverId");
            return (Criteria) this;
        }

        public Criteria andNameIsNull() {
            addCriterion("`name` is null");
            return (Criteria) this;
        }

        public Criteria andNameIsNotNull() {
            addCriterion("`name` is not null");
            return (Criteria) this;
        }

        public Criteria andNameEqualTo(String value) {
            addCriterion("`name` =", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andNameEqualToColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("`name` = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameNotEqualTo(String value) {
            addCriterion("`name` <>", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andNameNotEqualToColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("`name` <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameGreaterThan(String value) {
            addCriterion("`name` >", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andNameGreaterThanColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("`name` > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameGreaterThanOrEqualTo(String value) {
            addCriterion("`name` >=", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andNameGreaterThanOrEqualToColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("`name` >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameLessThan(String value) {
            addCriterion("`name` <", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andNameLessThanColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("`name` < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameLessThanOrEqualTo(String value) {
            addCriterion("`name` <=", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andNameLessThanOrEqualToColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("`name` <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameLike(String value) {
            addCriterion("`name` like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotLike(String value) {
            addCriterion("`name` not like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameIn(List<String> values) {
            addCriterion("`name` in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotIn(List<String> values) {
            addCriterion("`name` not in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameBetween(String value1, String value2) {
            addCriterion("`name` between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotBetween(String value1, String value2) {
            addCriterion("`name` not between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andDrivingYearsIsNull() {
            addCriterion("driving_years is null");
            return (Criteria) this;
        }

        public Criteria andDrivingYearsIsNotNull() {
            addCriterion("driving_years is not null");
            return (Criteria) this;
        }

        public Criteria andDrivingYearsEqualTo(Integer value) {
            addCriterion("driving_years =", value, "drivingYears");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andDrivingYearsEqualToColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("driving_years = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDrivingYearsNotEqualTo(Integer value) {
            addCriterion("driving_years <>", value, "drivingYears");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andDrivingYearsNotEqualToColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("driving_years <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDrivingYearsGreaterThan(Integer value) {
            addCriterion("driving_years >", value, "drivingYears");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andDrivingYearsGreaterThanColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("driving_years > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDrivingYearsGreaterThanOrEqualTo(Integer value) {
            addCriterion("driving_years >=", value, "drivingYears");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andDrivingYearsGreaterThanOrEqualToColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("driving_years >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDrivingYearsLessThan(Integer value) {
            addCriterion("driving_years <", value, "drivingYears");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andDrivingYearsLessThanColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("driving_years < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDrivingYearsLessThanOrEqualTo(Integer value) {
            addCriterion("driving_years <=", value, "drivingYears");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andDrivingYearsLessThanOrEqualToColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("driving_years <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDrivingYearsIn(List<Integer> values) {
            addCriterion("driving_years in", values, "drivingYears");
            return (Criteria) this;
        }

        public Criteria andDrivingYearsNotIn(List<Integer> values) {
            addCriterion("driving_years not in", values, "drivingYears");
            return (Criteria) this;
        }

        public Criteria andDrivingYearsBetween(Integer value1, Integer value2) {
            addCriterion("driving_years between", value1, value2, "drivingYears");
            return (Criteria) this;
        }

        public Criteria andDrivingYearsNotBetween(Integer value1, Integer value2) {
            addCriterion("driving_years not between", value1, value2, "drivingYears");
            return (Criteria) this;
        }

        public Criteria andGenderIsNull() {
            addCriterion("gender is null");
            return (Criteria) this;
        }

        public Criteria andGenderIsNotNull() {
            addCriterion("gender is not null");
            return (Criteria) this;
        }

        public Criteria andGenderEqualTo(String value) {
            addCriterion("gender =", value, "gender");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andGenderEqualToColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("gender = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGenderNotEqualTo(String value) {
            addCriterion("gender <>", value, "gender");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andGenderNotEqualToColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("gender <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGenderGreaterThan(String value) {
            addCriterion("gender >", value, "gender");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andGenderGreaterThanColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("gender > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGenderGreaterThanOrEqualTo(String value) {
            addCriterion("gender >=", value, "gender");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andGenderGreaterThanOrEqualToColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("gender >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGenderLessThan(String value) {
            addCriterion("gender <", value, "gender");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andGenderLessThanColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("gender < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGenderLessThanOrEqualTo(String value) {
            addCriterion("gender <=", value, "gender");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andGenderLessThanOrEqualToColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("gender <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGenderLike(String value) {
            addCriterion("gender like", value, "gender");
            return (Criteria) this;
        }

        public Criteria andGenderNotLike(String value) {
            addCriterion("gender not like", value, "gender");
            return (Criteria) this;
        }

        public Criteria andGenderIn(List<String> values) {
            addCriterion("gender in", values, "gender");
            return (Criteria) this;
        }

        public Criteria andGenderNotIn(List<String> values) {
            addCriterion("gender not in", values, "gender");
            return (Criteria) this;
        }

        public Criteria andGenderBetween(String value1, String value2) {
            addCriterion("gender between", value1, value2, "gender");
            return (Criteria) this;
        }

        public Criteria andGenderNotBetween(String value1, String value2) {
            addCriterion("gender not between", value1, value2, "gender");
            return (Criteria) this;
        }

        public Criteria andCellphoneIsNull() {
            addCriterion("cellphone is null");
            return (Criteria) this;
        }

        public Criteria andCellphoneIsNotNull() {
            addCriterion("cellphone is not null");
            return (Criteria) this;
        }

        public Criteria andCellphoneEqualTo(String value) {
            addCriterion("cellphone =", value, "cellphone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andCellphoneEqualToColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("cellphone = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCellphoneNotEqualTo(String value) {
            addCriterion("cellphone <>", value, "cellphone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andCellphoneNotEqualToColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("cellphone <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCellphoneGreaterThan(String value) {
            addCriterion("cellphone >", value, "cellphone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andCellphoneGreaterThanColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("cellphone > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCellphoneGreaterThanOrEqualTo(String value) {
            addCriterion("cellphone >=", value, "cellphone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andCellphoneGreaterThanOrEqualToColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("cellphone >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCellphoneLessThan(String value) {
            addCriterion("cellphone <", value, "cellphone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andCellphoneLessThanColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("cellphone < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCellphoneLessThanOrEqualTo(String value) {
            addCriterion("cellphone <=", value, "cellphone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andCellphoneLessThanOrEqualToColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("cellphone <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCellphoneLike(String value) {
            addCriterion("cellphone like", value, "cellphone");
            return (Criteria) this;
        }

        public Criteria andCellphoneNotLike(String value) {
            addCriterion("cellphone not like", value, "cellphone");
            return (Criteria) this;
        }

        public Criteria andCellphoneIn(List<String> values) {
            addCriterion("cellphone in", values, "cellphone");
            return (Criteria) this;
        }

        public Criteria andCellphoneNotIn(List<String> values) {
            addCriterion("cellphone not in", values, "cellphone");
            return (Criteria) this;
        }

        public Criteria andCellphoneBetween(String value1, String value2) {
            addCriterion("cellphone between", value1, value2, "cellphone");
            return (Criteria) this;
        }

        public Criteria andCellphoneNotBetween(String value1, String value2) {
            addCriterion("cellphone not between", value1, value2, "cellphone");
            return (Criteria) this;
        }

        public Criteria andVehicleNumberIsNull() {
            addCriterion("vehicle_number is null");
            return (Criteria) this;
        }

        public Criteria andVehicleNumberIsNotNull() {
            addCriterion("vehicle_number is not null");
            return (Criteria) this;
        }

        public Criteria andVehicleNumberEqualTo(String value) {
            addCriterion("vehicle_number =", value, "vehicleNumber");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andVehicleNumberEqualToColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("vehicle_number = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andVehicleNumberNotEqualTo(String value) {
            addCriterion("vehicle_number <>", value, "vehicleNumber");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andVehicleNumberNotEqualToColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("vehicle_number <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andVehicleNumberGreaterThan(String value) {
            addCriterion("vehicle_number >", value, "vehicleNumber");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andVehicleNumberGreaterThanColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("vehicle_number > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andVehicleNumberGreaterThanOrEqualTo(String value) {
            addCriterion("vehicle_number >=", value, "vehicleNumber");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andVehicleNumberGreaterThanOrEqualToColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("vehicle_number >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andVehicleNumberLessThan(String value) {
            addCriterion("vehicle_number <", value, "vehicleNumber");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andVehicleNumberLessThanColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("vehicle_number < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andVehicleNumberLessThanOrEqualTo(String value) {
            addCriterion("vehicle_number <=", value, "vehicleNumber");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andVehicleNumberLessThanOrEqualToColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("vehicle_number <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andVehicleNumberLike(String value) {
            addCriterion("vehicle_number like", value, "vehicleNumber");
            return (Criteria) this;
        }

        public Criteria andVehicleNumberNotLike(String value) {
            addCriterion("vehicle_number not like", value, "vehicleNumber");
            return (Criteria) this;
        }

        public Criteria andVehicleNumberIn(List<String> values) {
            addCriterion("vehicle_number in", values, "vehicleNumber");
            return (Criteria) this;
        }

        public Criteria andVehicleNumberNotIn(List<String> values) {
            addCriterion("vehicle_number not in", values, "vehicleNumber");
            return (Criteria) this;
        }

        public Criteria andVehicleNumberBetween(String value1, String value2) {
            addCriterion("vehicle_number between", value1, value2, "vehicleNumber");
            return (Criteria) this;
        }

        public Criteria andVehicleNumberNotBetween(String value1, String value2) {
            addCriterion("vehicle_number not between", value1, value2, "vehicleNumber");
            return (Criteria) this;
        }

        public Criteria andStarLevelIsNull() {
            addCriterion("star_level is null");
            return (Criteria) this;
        }

        public Criteria andStarLevelIsNotNull() {
            addCriterion("star_level is not null");
            return (Criteria) this;
        }

        public Criteria andStarLevelEqualTo(Integer value) {
            addCriterion("star_level =", value, "starLevel");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andStarLevelEqualToColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("star_level = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStarLevelNotEqualTo(Integer value) {
            addCriterion("star_level <>", value, "starLevel");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andStarLevelNotEqualToColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("star_level <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStarLevelGreaterThan(Integer value) {
            addCriterion("star_level >", value, "starLevel");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andStarLevelGreaterThanColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("star_level > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStarLevelGreaterThanOrEqualTo(Integer value) {
            addCriterion("star_level >=", value, "starLevel");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andStarLevelGreaterThanOrEqualToColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("star_level >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStarLevelLessThan(Integer value) {
            addCriterion("star_level <", value, "starLevel");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andStarLevelLessThanColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("star_level < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStarLevelLessThanOrEqualTo(Integer value) {
            addCriterion("star_level <=", value, "starLevel");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andStarLevelLessThanOrEqualToColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("star_level <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStarLevelIn(List<Integer> values) {
            addCriterion("star_level in", values, "starLevel");
            return (Criteria) this;
        }

        public Criteria andStarLevelNotIn(List<Integer> values) {
            addCriterion("star_level not in", values, "starLevel");
            return (Criteria) this;
        }

        public Criteria andStarLevelBetween(Integer value1, Integer value2) {
            addCriterion("star_level between", value1, value2, "starLevel");
            return (Criteria) this;
        }

        public Criteria andStarLevelNotBetween(Integer value1, Integer value2) {
            addCriterion("star_level not between", value1, value2, "starLevel");
            return (Criteria) this;
        }

        public Criteria andGoodCommentRateIsNull() {
            addCriterion("good_comment_rate is null");
            return (Criteria) this;
        }

        public Criteria andGoodCommentRateIsNotNull() {
            addCriterion("good_comment_rate is not null");
            return (Criteria) this;
        }

        public Criteria andGoodCommentRateEqualTo(Integer value) {
            addCriterion("good_comment_rate =", value, "goodCommentRate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andGoodCommentRateEqualToColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("good_comment_rate = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGoodCommentRateNotEqualTo(Integer value) {
            addCriterion("good_comment_rate <>", value, "goodCommentRate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andGoodCommentRateNotEqualToColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("good_comment_rate <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGoodCommentRateGreaterThan(Integer value) {
            addCriterion("good_comment_rate >", value, "goodCommentRate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andGoodCommentRateGreaterThanColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("good_comment_rate > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGoodCommentRateGreaterThanOrEqualTo(Integer value) {
            addCriterion("good_comment_rate >=", value, "goodCommentRate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andGoodCommentRateGreaterThanOrEqualToColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("good_comment_rate >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGoodCommentRateLessThan(Integer value) {
            addCriterion("good_comment_rate <", value, "goodCommentRate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andGoodCommentRateLessThanColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("good_comment_rate < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGoodCommentRateLessThanOrEqualTo(Integer value) {
            addCriterion("good_comment_rate <=", value, "goodCommentRate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andGoodCommentRateLessThanOrEqualToColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("good_comment_rate <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGoodCommentRateIn(List<Integer> values) {
            addCriterion("good_comment_rate in", values, "goodCommentRate");
            return (Criteria) this;
        }

        public Criteria andGoodCommentRateNotIn(List<Integer> values) {
            addCriterion("good_comment_rate not in", values, "goodCommentRate");
            return (Criteria) this;
        }

        public Criteria andGoodCommentRateBetween(Integer value1, Integer value2) {
            addCriterion("good_comment_rate between", value1, value2, "goodCommentRate");
            return (Criteria) this;
        }

        public Criteria andGoodCommentRateNotBetween(Integer value1, Integer value2) {
            addCriterion("good_comment_rate not between", value1, value2, "goodCommentRate");
            return (Criteria) this;
        }

        public Criteria andUnittimeCompleteCountIsNull() {
            addCriterion("unittime_complete_count is null");
            return (Criteria) this;
        }

        public Criteria andUnittimeCompleteCountIsNotNull() {
            addCriterion("unittime_complete_count is not null");
            return (Criteria) this;
        }

        public Criteria andUnittimeCompleteCountEqualTo(Integer value) {
            addCriterion("unittime_complete_count =", value, "unittimeCompleteCount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andUnittimeCompleteCountEqualToColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("unittime_complete_count = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUnittimeCompleteCountNotEqualTo(Integer value) {
            addCriterion("unittime_complete_count <>", value, "unittimeCompleteCount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andUnittimeCompleteCountNotEqualToColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("unittime_complete_count <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUnittimeCompleteCountGreaterThan(Integer value) {
            addCriterion("unittime_complete_count >", value, "unittimeCompleteCount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andUnittimeCompleteCountGreaterThanColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("unittime_complete_count > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUnittimeCompleteCountGreaterThanOrEqualTo(Integer value) {
            addCriterion("unittime_complete_count >=", value, "unittimeCompleteCount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andUnittimeCompleteCountGreaterThanOrEqualToColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("unittime_complete_count >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUnittimeCompleteCountLessThan(Integer value) {
            addCriterion("unittime_complete_count <", value, "unittimeCompleteCount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andUnittimeCompleteCountLessThanColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("unittime_complete_count < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUnittimeCompleteCountLessThanOrEqualTo(Integer value) {
            addCriterion("unittime_complete_count <=", value, "unittimeCompleteCount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andUnittimeCompleteCountLessThanOrEqualToColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("unittime_complete_count <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUnittimeCompleteCountIn(List<Integer> values) {
            addCriterion("unittime_complete_count in", values, "unittimeCompleteCount");
            return (Criteria) this;
        }

        public Criteria andUnittimeCompleteCountNotIn(List<Integer> values) {
            addCriterion("unittime_complete_count not in", values, "unittimeCompleteCount");
            return (Criteria) this;
        }

        public Criteria andUnittimeCompleteCountBetween(Integer value1, Integer value2) {
            addCriterion("unittime_complete_count between", value1, value2, "unittimeCompleteCount");
            return (Criteria) this;
        }

        public Criteria andUnittimeCompleteCountNotBetween(Integer value1, Integer value2) {
            addCriterion("unittime_complete_count not between", value1, value2, "unittimeCompleteCount");
            return (Criteria) this;
        }

        public Criteria andBrandIsNull() {
            addCriterion("brand is null");
            return (Criteria) this;
        }

        public Criteria andBrandIsNotNull() {
            addCriterion("brand is not null");
            return (Criteria) this;
        }

        public Criteria andBrandEqualTo(String value) {
            addCriterion("brand =", value, "brand");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andBrandEqualToColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("brand = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBrandNotEqualTo(String value) {
            addCriterion("brand <>", value, "brand");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andBrandNotEqualToColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("brand <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBrandGreaterThan(String value) {
            addCriterion("brand >", value, "brand");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andBrandGreaterThanColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("brand > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBrandGreaterThanOrEqualTo(String value) {
            addCriterion("brand >=", value, "brand");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andBrandGreaterThanOrEqualToColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("brand >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBrandLessThan(String value) {
            addCriterion("brand <", value, "brand");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andBrandLessThanColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("brand < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBrandLessThanOrEqualTo(String value) {
            addCriterion("brand <=", value, "brand");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andBrandLessThanOrEqualToColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("brand <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBrandLike(String value) {
            addCriterion("brand like", value, "brand");
            return (Criteria) this;
        }

        public Criteria andBrandNotLike(String value) {
            addCriterion("brand not like", value, "brand");
            return (Criteria) this;
        }

        public Criteria andBrandIn(List<String> values) {
            addCriterion("brand in", values, "brand");
            return (Criteria) this;
        }

        public Criteria andBrandNotIn(List<String> values) {
            addCriterion("brand not in", values, "brand");
            return (Criteria) this;
        }

        public Criteria andBrandBetween(String value1, String value2) {
            addCriterion("brand between", value1, value2, "brand");
            return (Criteria) this;
        }

        public Criteria andBrandNotBetween(String value1, String value2) {
            addCriterion("brand not between", value1, value2, "brand");
            return (Criteria) this;
        }

        public Criteria andCarSetupIsNull() {
            addCriterion("car_setup is null");
            return (Criteria) this;
        }

        public Criteria andCarSetupIsNotNull() {
            addCriterion("car_setup is not null");
            return (Criteria) this;
        }

        public Criteria andCarSetupEqualTo(String value) {
            addCriterion("car_setup =", value, "carSetup");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andCarSetupEqualToColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("car_setup = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCarSetupNotEqualTo(String value) {
            addCriterion("car_setup <>", value, "carSetup");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andCarSetupNotEqualToColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("car_setup <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCarSetupGreaterThan(String value) {
            addCriterion("car_setup >", value, "carSetup");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andCarSetupGreaterThanColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("car_setup > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCarSetupGreaterThanOrEqualTo(String value) {
            addCriterion("car_setup >=", value, "carSetup");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andCarSetupGreaterThanOrEqualToColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("car_setup >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCarSetupLessThan(String value) {
            addCriterion("car_setup <", value, "carSetup");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andCarSetupLessThanColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("car_setup < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCarSetupLessThanOrEqualTo(String value) {
            addCriterion("car_setup <=", value, "carSetup");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andCarSetupLessThanOrEqualToColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("car_setup <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCarSetupLike(String value) {
            addCriterion("car_setup like", value, "carSetup");
            return (Criteria) this;
        }

        public Criteria andCarSetupNotLike(String value) {
            addCriterion("car_setup not like", value, "carSetup");
            return (Criteria) this;
        }

        public Criteria andCarSetupIn(List<String> values) {
            addCriterion("car_setup in", values, "carSetup");
            return (Criteria) this;
        }

        public Criteria andCarSetupNotIn(List<String> values) {
            addCriterion("car_setup not in", values, "carSetup");
            return (Criteria) this;
        }

        public Criteria andCarSetupBetween(String value1, String value2) {
            addCriterion("car_setup between", value1, value2, "carSetup");
            return (Criteria) this;
        }

        public Criteria andCarSetupNotBetween(String value1, String value2) {
            addCriterion("car_setup not between", value1, value2, "carSetup");
            return (Criteria) this;
        }

        public Criteria andCarCompanyNameIsNull() {
            addCriterion("car_company_name is null");
            return (Criteria) this;
        }

        public Criteria andCarCompanyNameIsNotNull() {
            addCriterion("car_company_name is not null");
            return (Criteria) this;
        }

        public Criteria andCarCompanyNameEqualTo(String value) {
            addCriterion("car_company_name =", value, "carCompanyName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andCarCompanyNameEqualToColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("car_company_name = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCarCompanyNameNotEqualTo(String value) {
            addCriterion("car_company_name <>", value, "carCompanyName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andCarCompanyNameNotEqualToColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("car_company_name <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCarCompanyNameGreaterThan(String value) {
            addCriterion("car_company_name >", value, "carCompanyName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andCarCompanyNameGreaterThanColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("car_company_name > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCarCompanyNameGreaterThanOrEqualTo(String value) {
            addCriterion("car_company_name >=", value, "carCompanyName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andCarCompanyNameGreaterThanOrEqualToColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("car_company_name >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCarCompanyNameLessThan(String value) {
            addCriterion("car_company_name <", value, "carCompanyName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andCarCompanyNameLessThanColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("car_company_name < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCarCompanyNameLessThanOrEqualTo(String value) {
            addCriterion("car_company_name <=", value, "carCompanyName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andCarCompanyNameLessThanOrEqualToColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("car_company_name <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCarCompanyNameLike(String value) {
            addCriterion("car_company_name like", value, "carCompanyName");
            return (Criteria) this;
        }

        public Criteria andCarCompanyNameNotLike(String value) {
            addCriterion("car_company_name not like", value, "carCompanyName");
            return (Criteria) this;
        }

        public Criteria andCarCompanyNameIn(List<String> values) {
            addCriterion("car_company_name in", values, "carCompanyName");
            return (Criteria) this;
        }

        public Criteria andCarCompanyNameNotIn(List<String> values) {
            addCriterion("car_company_name not in", values, "carCompanyName");
            return (Criteria) this;
        }

        public Criteria andCarCompanyNameBetween(String value1, String value2) {
            addCriterion("car_company_name between", value1, value2, "carCompanyName");
            return (Criteria) this;
        }

        public Criteria andCarCompanyNameNotBetween(String value1, String value2) {
            addCriterion("car_company_name not between", value1, value2, "carCompanyName");
            return (Criteria) this;
        }

        public Criteria andDriverCompanyNameIsNull() {
            addCriterion("driver_company_name is null");
            return (Criteria) this;
        }

        public Criteria andDriverCompanyNameIsNotNull() {
            addCriterion("driver_company_name is not null");
            return (Criteria) this;
        }

        public Criteria andDriverCompanyNameEqualTo(String value) {
            addCriterion("driver_company_name =", value, "driverCompanyName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andDriverCompanyNameEqualToColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("driver_company_name = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDriverCompanyNameNotEqualTo(String value) {
            addCriterion("driver_company_name <>", value, "driverCompanyName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andDriverCompanyNameNotEqualToColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("driver_company_name <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDriverCompanyNameGreaterThan(String value) {
            addCriterion("driver_company_name >", value, "driverCompanyName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andDriverCompanyNameGreaterThanColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("driver_company_name > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDriverCompanyNameGreaterThanOrEqualTo(String value) {
            addCriterion("driver_company_name >=", value, "driverCompanyName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andDriverCompanyNameGreaterThanOrEqualToColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("driver_company_name >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDriverCompanyNameLessThan(String value) {
            addCriterion("driver_company_name <", value, "driverCompanyName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andDriverCompanyNameLessThanColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("driver_company_name < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDriverCompanyNameLessThanOrEqualTo(String value) {
            addCriterion("driver_company_name <=", value, "driverCompanyName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andDriverCompanyNameLessThanOrEqualToColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("driver_company_name <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDriverCompanyNameLike(String value) {
            addCriterion("driver_company_name like", value, "driverCompanyName");
            return (Criteria) this;
        }

        public Criteria andDriverCompanyNameNotLike(String value) {
            addCriterion("driver_company_name not like", value, "driverCompanyName");
            return (Criteria) this;
        }

        public Criteria andDriverCompanyNameIn(List<String> values) {
            addCriterion("driver_company_name in", values, "driverCompanyName");
            return (Criteria) this;
        }

        public Criteria andDriverCompanyNameNotIn(List<String> values) {
            addCriterion("driver_company_name not in", values, "driverCompanyName");
            return (Criteria) this;
        }

        public Criteria andDriverCompanyNameBetween(String value1, String value2) {
            addCriterion("driver_company_name between", value1, value2, "driverCompanyName");
            return (Criteria) this;
        }

        public Criteria andDriverCompanyNameNotBetween(String value1, String value2) {
            addCriterion("driver_company_name not between", value1, value2, "driverCompanyName");
            return (Criteria) this;
        }

        public Criteria andCarTypeIsNull() {
            addCriterion("car_type is null");
            return (Criteria) this;
        }

        public Criteria andCarTypeIsNotNull() {
            addCriterion("car_type is not null");
            return (Criteria) this;
        }

        public Criteria andCarTypeEqualTo(String value) {
            addCriterion("car_type =", value, "carType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andCarTypeEqualToColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("car_type = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCarTypeNotEqualTo(String value) {
            addCriterion("car_type <>", value, "carType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andCarTypeNotEqualToColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("car_type <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCarTypeGreaterThan(String value) {
            addCriterion("car_type >", value, "carType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andCarTypeGreaterThanColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("car_type > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCarTypeGreaterThanOrEqualTo(String value) {
            addCriterion("car_type >=", value, "carType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andCarTypeGreaterThanOrEqualToColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("car_type >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCarTypeLessThan(String value) {
            addCriterion("car_type <", value, "carType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andCarTypeLessThanColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("car_type < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCarTypeLessThanOrEqualTo(String value) {
            addCriterion("car_type <=", value, "carType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andCarTypeLessThanOrEqualToColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("car_type <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCarTypeLike(String value) {
            addCriterion("car_type like", value, "carType");
            return (Criteria) this;
        }

        public Criteria andCarTypeNotLike(String value) {
            addCriterion("car_type not like", value, "carType");
            return (Criteria) this;
        }

        public Criteria andCarTypeIn(List<String> values) {
            addCriterion("car_type in", values, "carType");
            return (Criteria) this;
        }

        public Criteria andCarTypeNotIn(List<String> values) {
            addCriterion("car_type not in", values, "carType");
            return (Criteria) this;
        }

        public Criteria andCarTypeBetween(String value1, String value2) {
            addCriterion("car_type between", value1, value2, "carType");
            return (Criteria) this;
        }

        public Criteria andCarTypeNotBetween(String value1, String value2) {
            addCriterion("car_type not between", value1, value2, "carType");
            return (Criteria) this;
        }

        public Criteria andCarTypeIdIsNull() {
            addCriterion("car_type_id is null");
            return (Criteria) this;
        }

        public Criteria andCarTypeIdIsNotNull() {
            addCriterion("car_type_id is not null");
            return (Criteria) this;
        }

        public Criteria andCarTypeIdEqualTo(Integer value) {
            addCriterion("car_type_id =", value, "carTypeId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andCarTypeIdEqualToColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("car_type_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCarTypeIdNotEqualTo(Integer value) {
            addCriterion("car_type_id <>", value, "carTypeId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andCarTypeIdNotEqualToColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("car_type_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCarTypeIdGreaterThan(Integer value) {
            addCriterion("car_type_id >", value, "carTypeId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andCarTypeIdGreaterThanColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("car_type_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCarTypeIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("car_type_id >=", value, "carTypeId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andCarTypeIdGreaterThanOrEqualToColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("car_type_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCarTypeIdLessThan(Integer value) {
            addCriterion("car_type_id <", value, "carTypeId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andCarTypeIdLessThanColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("car_type_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCarTypeIdLessThanOrEqualTo(Integer value) {
            addCriterion("car_type_id <=", value, "carTypeId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andCarTypeIdLessThanOrEqualToColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("car_type_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCarTypeIdIn(List<Integer> values) {
            addCriterion("car_type_id in", values, "carTypeId");
            return (Criteria) this;
        }

        public Criteria andCarTypeIdNotIn(List<Integer> values) {
            addCriterion("car_type_id not in", values, "carTypeId");
            return (Criteria) this;
        }

        public Criteria andCarTypeIdBetween(Integer value1, Integer value2) {
            addCriterion("car_type_id between", value1, value2, "carTypeId");
            return (Criteria) this;
        }

        public Criteria andCarTypeIdNotBetween(Integer value1, Integer value2) {
            addCriterion("car_type_id not between", value1, value2, "carTypeId");
            return (Criteria) this;
        }

        public Criteria andIsDefaultIsNull() {
            addCriterion("is_default is null");
            return (Criteria) this;
        }

        public Criteria andIsDefaultIsNotNull() {
            addCriterion("is_default is not null");
            return (Criteria) this;
        }

        public Criteria andIsDefaultEqualTo(Short value) {
            addCriterion("is_default =", value, "isDefault");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andIsDefaultEqualToColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("is_default = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsDefaultNotEqualTo(Short value) {
            addCriterion("is_default <>", value, "isDefault");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andIsDefaultNotEqualToColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("is_default <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsDefaultGreaterThan(Short value) {
            addCriterion("is_default >", value, "isDefault");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andIsDefaultGreaterThanColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("is_default > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsDefaultGreaterThanOrEqualTo(Short value) {
            addCriterion("is_default >=", value, "isDefault");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andIsDefaultGreaterThanOrEqualToColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("is_default >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsDefaultLessThan(Short value) {
            addCriterion("is_default <", value, "isDefault");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andIsDefaultLessThanColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("is_default < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsDefaultLessThanOrEqualTo(Short value) {
            addCriterion("is_default <=", value, "isDefault");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andIsDefaultLessThanOrEqualToColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("is_default <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIsDefaultIn(List<Short> values) {
            addCriterion("is_default in", values, "isDefault");
            return (Criteria) this;
        }

        public Criteria andIsDefaultNotIn(List<Short> values) {
            addCriterion("is_default not in", values, "isDefault");
            return (Criteria) this;
        }

        public Criteria andIsDefaultBetween(Short value1, Short value2) {
            addCriterion("is_default between", value1, value2, "isDefault");
            return (Criteria) this;
        }

        public Criteria andIsDefaultNotBetween(Short value1, Short value2) {
            addCriterion("is_default not between", value1, value2, "isDefault");
            return (Criteria) this;
        }

        public Criteria andPhotoIsNull() {
            addCriterion("photo is null");
            return (Criteria) this;
        }

        public Criteria andPhotoIsNotNull() {
            addCriterion("photo is not null");
            return (Criteria) this;
        }

        public Criteria andPhotoEqualTo(String value) {
            addCriterion("photo =", value, "photo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andPhotoEqualToColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("photo = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPhotoNotEqualTo(String value) {
            addCriterion("photo <>", value, "photo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andPhotoNotEqualToColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("photo <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPhotoGreaterThan(String value) {
            addCriterion("photo >", value, "photo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andPhotoGreaterThanColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("photo > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPhotoGreaterThanOrEqualTo(String value) {
            addCriterion("photo >=", value, "photo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andPhotoGreaterThanOrEqualToColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("photo >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPhotoLessThan(String value) {
            addCriterion("photo <", value, "photo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andPhotoLessThanColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("photo < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPhotoLessThanOrEqualTo(String value) {
            addCriterion("photo <=", value, "photo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andPhotoLessThanOrEqualToColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("photo <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPhotoLike(String value) {
            addCriterion("photo like", value, "photo");
            return (Criteria) this;
        }

        public Criteria andPhotoNotLike(String value) {
            addCriterion("photo not like", value, "photo");
            return (Criteria) this;
        }

        public Criteria andPhotoIn(List<String> values) {
            addCriterion("photo in", values, "photo");
            return (Criteria) this;
        }

        public Criteria andPhotoNotIn(List<String> values) {
            addCriterion("photo not in", values, "photo");
            return (Criteria) this;
        }

        public Criteria andPhotoBetween(String value1, String value2) {
            addCriterion("photo between", value1, value2, "photo");
            return (Criteria) this;
        }

        public Criteria andPhotoNotBetween(String value1, String value2) {
            addCriterion("photo not between", value1, value2, "photo");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("create_time is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("create_time is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(Integer value) {
            addCriterion("create_time =", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeEqualToColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("create_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(Integer value) {
            addCriterion("create_time <>", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeNotEqualToColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("create_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(Integer value) {
            addCriterion("create_time >", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeGreaterThanColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("create_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(Integer value) {
            addCriterion("create_time >=", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeGreaterThanOrEqualToColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("create_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(Integer value) {
            addCriterion("create_time <", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeLessThanColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("create_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(Integer value) {
            addCriterion("create_time <=", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeLessThanOrEqualToColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("create_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<Integer> values) {
            addCriterion("create_time in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<Integer> values) {
            addCriterion("create_time not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(Integer value1, Integer value2) {
            addCriterion("create_time between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(Integer value1, Integer value2) {
            addCriterion("create_time not between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNull() {
            addCriterion("update_time is null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNotNull() {
            addCriterion("update_time is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeEqualTo(Integer value) {
            addCriterion("update_time =", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeEqualToColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("update_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotEqualTo(Integer value) {
            addCriterion("update_time <>", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeNotEqualToColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("update_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThan(Integer value) {
            addCriterion("update_time >", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeGreaterThanColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("update_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThanOrEqualTo(Integer value) {
            addCriterion("update_time >=", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeGreaterThanOrEqualToColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("update_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThan(Integer value) {
            addCriterion("update_time <", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeLessThanColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("update_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThanOrEqualTo(Integer value) {
            addCriterion("update_time <=", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeLessThanOrEqualToColumn(YopsaasRideDriver.Column column) {
            addCriterion(new StringBuilder("update_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIn(List<Integer> values) {
            addCriterion("update_time in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotIn(List<Integer> values) {
            addCriterion("update_time not in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeBetween(Integer value1, Integer value2) {
            addCriterion("update_time between", value1, value2, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotBetween(Integer value1, Integer value2) {
            addCriterion("update_time not between", value1, value2, "updateTime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table yopsaas_ride_driver
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        /**
         * This field was generated by MyBatis Generator.
         * This field corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        private YopsaasRideDriverExample example;

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        protected Criteria(YopsaasRideDriverExample example) {
            super();
            this.example = example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public YopsaasRideDriverExample example() {
            return this.example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        @Deprecated
        public Criteria andIf(boolean ifAdd, ICriteriaAdd add) {
            if (ifAdd) {
                add.add(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then) {
            if (condition) {
                then.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then, ICriteriaWhen otherwise) {
            if (condition) {
                then.criteria(this);
            } else {
                otherwise.criteria(this);
            }
            return this;
        }

        @Deprecated
        public interface ICriteriaAdd {
            /**
             * This method was generated by MyBatis Generator.
             * This method corresponds to the database table yopsaas_ride_driver
             *
             * @mbg.generated
             */
            Criteria add(Criteria add);
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table yopsaas_ride_driver
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    public interface ICriteriaWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        void criteria(Criteria criteria);
    }

    public interface IExampleWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table yopsaas_ride_driver
         *
         * @mbg.generated
         */
        void example(com.yongche.yopsaas.db.domain.YopsaasRideDriverExample example);
    }
}